var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.369,1,0.985]],["body/components/App.html",[0,0.607,1,1.993,2,1.456,3,0.371,4,0.326,5,1.303,6,1.303,7,0.326,8,3.089,9,1.115,10,2.131,11,3.518,12,1.701,13,5.359,14,1.701,15,0.371,16,0.675,17,5.359,18,5.359,19,0.466,20,0.03,21,0.88,22,1.409,23,1.409,24,4.813,25,0.607,26,4.813,27,1.205,28,3.687,29,1.245,30,0.88,31,2.401,32,0.371,33,0.953,34,1.303,35,1.573,36,1.701,37,0.953,38,2.007,39,1.303,40,1.752,41,1.303,42,1.115,43,0.52,44,1.303,45,1.115,46,1.303,47,1.115,48,1.303,49,1.303,50,1.115,51,1.303,52,1.115,53,1.303,54,1.115,55,1.303,56,1.115,57,1.303,58,1.303,59,1.031,60,1.205,61,0.417,62,1.303,63,1.115,64,1.303,65,1.115,66,1.031,67,1.205,68,1.303,69,0.022,70,0.022]],["title/directives/AutoFocus.html",[37,0.842,66,0.911]],["body/directives/AutoFocus.html",[3,0.44,4,0.387,7,0.387,9,1.325,10,1.755,15,0.44,16,0.753,20,0.03,22,1.674,23,1.674,27,1.755,29,1.133,30,1.046,32,0.44,33,1.133,37,1.388,65,1.325,66,1.502,67,1.755,69,0.025,70,0.025,71,4.863,72,3.67,73,3.496,74,5.804,75,4.243,76,5.804,77,2.412,78,6.05,79,4.38,80,1.814,81,2.142,82,5.368,83,4.38,84,4.38,85,2.574,86,4.38,87,4.38]],["title/interfaces/Comment.html",[43,0.288,88,0.504]],["body/interfaces/Comment.html",[3,0.304,4,0.267,7,0.267,15,0.304,16,0.59,19,0.776,20,0.031,21,1.549,25,0.342,32,0.634,43,0.503,61,0.476,69,0.019,70,0.019,88,0.949,89,1.067,90,0.913,91,1.724,92,1.945,93,1.587,94,2.179,95,1.85,96,1.665,97,1.863,98,1.474,99,1.531,100,1.853,101,1.465,102,0.913,103,1.464,104,1.067,105,1.067,106,0.926,107,1.067,108,1.464,109,1.067,110,1.067,111,1.156,112,0.721,113,0.926,114,1.486,115,1.375,116,1.375,117,1.375,118,1.486,119,1.154,120,0.913,121,1.665,122,1.665,123,0.913,124,0.913,125,0.913,126,0.913,127,0.987,128,0.913]],["title/components/CommentCard.html",[0,0.369,42,0.985]],["body/components/CommentCard.html",[0,0.38,1,1.707,2,0.808,3,0.166,4,0.146,5,0.584,6,0.584,7,0.146,9,0.5,10,1.845,12,0.944,14,0.584,15,0.166,16,0.375,19,0.692,20,0.031,21,1.01,22,1.617,23,1.617,25,0.187,27,1.94,29,1.359,30,0.395,32,0.166,33,0.428,34,0.584,35,0.873,36,0.944,37,0.428,38,1.362,39,0.584,40,1.479,41,0.584,42,1.166,43,0.515,44,0.584,45,1.166,46,0.584,47,1.166,48,0.584,49,0.584,50,1.166,51,0.584,52,1.166,53,0.584,54,0.5,55,0.584,56,0.5,57,0.584,58,0.584,59,0.463,60,0.541,61,0.187,62,0.584,63,0.5,64,0.584,65,0.5,66,0.463,67,0.541,68,0.584,69,0.012,70,0.012,73,1.739,77,1.2,80,1.971,81,2.328,85,0.972,91,1.016,93,1.323,94,1.284,96,1.016,97,0.541,98,1.478,99,0.638,100,1.431,101,0.94,103,1.016,106,0.996,112,1.183,113,0.996,121,1.547,122,1.547,127,0.541,128,0.808,129,2.474,130,4.369,131,1.386,132,2.455,133,1.021,134,1.021,135,2.237,136,2.139,137,1.474,138,2.455,139,1.306,140,2.67,141,1.569,142,2.67,143,1.427,144,2.486,145,2.455,146,3.23,147,3.23,148,3.23,149,3.23,150,3.23,151,2.67,152,2.237,153,3.358,154,3.358,155,0.884,156,0.972,157,2.67,158,1.642,159,1.654,160,1.654,161,1.654,162,1.654,163,1.654,164,2.237,165,2.237,166,1.654,167,1.654,168,1.654,169,1.654,170,1.654,171,1.654,172,1.654,173,2.67,174,1.654,175,2.237,176,1.654,177,1.654,178,2.061,179,1.654,180,2.237,181,1.654,182,0.632,183,4.151,184,1.077,185,1.386,186,3.23,187,1.209,188,1.386,189,1.209,190,1.209,191,1.209,192,1.386,193,0.972,194,1.209,195,0.809,196,0.972,197,1.077,198,1.386,199,0.972,200,1.654,201,1.654,202,2.455,203,1.654,204,1.654,205,1.386,206,5.116,207,1.654,208,1.654,209,1.386,210,1.654,211,1.654,212,1.654,213,1.654,214,2.237,215,4.524,216,5.372,217,4.524,218,3.927,219,2.67,220,1.654,221,1.654,222,1.654,223,1.209,224,2.67,225,2.67,226,1.654,227,1.654,228,1.654,229,1.654,230,1.654,231,2.455,232,1.654,233,1.209,234,2.237,235,2.237,236,4.954,237,1.739,238,1.209,239,1.386]],["title/injectables/CommentCardState.html",[136,1.464,240,1.914]],["body/injectables/CommentCardState.html",[3,0.368,4,0.323,7,0.323,15,0.368,16,0.671,19,0.763,20,0.031,27,2.008,29,1.464,30,0.873,32,0.368,33,0.945,43,0.519,69,0.022,70,0.022,96,1.614,98,1.38,101,1.023,106,1.246,113,0.805,129,2.58,136,2.151,137,2.409,155,2.853,185,3.063,195,3.048,196,2.148,205,3.063,209,3.063,240,2.812,241,2.673,242,2.673,243,3.476,244,5.337,245,4.787,246,6.408,247,3.656,248,3.656,249,3.656,250,3.656,251,5.877,252,3.656,253,3.656,254,3.656,255,3.063,256,3.656,257,3.656,258,3.656,259,3.656,260,4.787,261,3.656,262,3.656,263,3.656]],["title/components/CommentContent.html",[0,0.369,45,0.985]],["body/components/CommentContent.html",[0,0.396,1,1.731,2,0.847,3,0.176,4,0.155,5,0.62,6,0.62,7,0.155,9,0.531,10,1.871,12,0.99,14,0.62,15,0.176,16,0.393,19,0.588,20,0.031,22,1.336,23,1.336,25,0.199,27,1.787,29,1.261,30,0.419,32,0.176,33,0.454,34,0.62,35,0.916,36,0.99,37,0.454,38,1.41,39,0.62,40,1.425,41,0.62,42,0.531,43,0.543,44,0.62,45,1.207,46,0.62,47,0.531,48,0.62,49,0.62,50,0.531,51,0.62,52,0.531,53,0.62,54,0.531,55,0.62,56,0.531,57,0.62,58,0.62,59,0.491,60,0.574,61,0.199,62,0.62,63,0.531,64,0.62,65,0.531,66,1.116,67,0.574,68,0.62,69,0.013,70,0.013,73,1.824,75,2.555,77,1.259,80,1.652,81,1.951,91,1.653,93,0.904,94,1.071,98,1.609,99,0.669,100,0.784,111,0.953,112,1.041,113,1.023,116,1.655,117,0.916,129,2.303,132,2.555,133,1.071,134,1.071,136,1.959,137,1.071,138,2.555,139,1.37,141,1.646,143,1.497,144,2.561,146,3.343,149,3.343,155,0.938,156,1.031,158,1.37,178,1.497,182,0.671,184,1.143,189,4.067,193,1.646,196,1.031,199,1.031,202,1.283,214,3.893,223,3.816,231,3.702,233,1.283,234,3.343,235,2.347,237,3.176,238,1.283,239,1.471,264,3.269,265,1.471,266,1.824,267,1.824,268,3.496,269,2.801,270,2.801,271,3.496,272,2.801,273,1.824,274,2.929,275,1.756,276,2.839,277,1.756,278,1.756,279,1.756,280,2.801,281,3.496,282,1.756,283,1.756,284,1.756,285,1.756,286,1.756,287,2.088,288,3.496,289,3.496,290,2.801,291,2.801,292,1.756,293,1.756,294,1.756,295,2.276,296,1.143,297,1.756,298,1.471,299,1.471,300,1.471,301,2.048,302,1.756,303,1.756,304,3.496,305,2.801,306,1.756,307,1.756,308,2.929,309,1.756,310,1.756,311,1.756,312,2.801,313,2.801,314,1.756,315,1.756,316,2.801,317,1.756,318,1.756,319,1.756,320,1.756,321,1.756,322,1.756,323,1.471,324,2.801,325,2.801,326,3.99,327,3.99,328,3.99,329,1.471,330,1.756,331,1.756]],["title/components/CommentHeader.html",[0,0.369,47,0.985]],["body/components/CommentHeader.html",[0,0.544,1,1.915,2,1.26,3,0.3,4,0.263,5,1.053,6,1.053,7,0.263,9,0.901,10,2.069,12,1.472,14,1.053,15,0.3,16,0.585,19,0.527,20,0.031,25,0.337,27,1.362,29,1.243,30,0.711,32,0.3,33,0.77,34,1.053,35,1.362,36,1.472,37,0.77,38,1.839,39,1.053,40,1.701,41,1.053,42,0.901,43,0.568,44,1.053,45,0.901,46,1.053,47,1.574,48,1.053,49,1.053,50,0.901,51,1.053,52,0.901,53,1.053,54,0.901,55,1.053,56,0.901,57,1.053,58,1.053,59,0.833,60,0.974,61,0.337,62,1.053,63,0.901,64,1.053,65,0.901,66,0.833,67,0.974,68,1.053,69,0.019,70,0.019,94,1.139,106,1.058,129,1.99,132,2.178,133,1.593,134,1.593,136,2.461,137,1.139,139,2.038,141,2.448,143,2.227,144,3.218,155,1.592,156,1.75,158,1.457,182,1.139,187,3.513,188,3.491,193,1.75,199,1.75,243,3.389,264,2.823,266,2.714,267,2.714,296,1.94,323,2.496,329,2.496,332,2.496,333,3.13,334,4.167,335,4.167,336,2.979,337,2.979,338,2.979,339,1.94,340,1.75,341,4.755,342,2.979,343,2.496,344,4.167,345,5.204,346,3.491,347,2.979,348,2.496,349,2.979]],["title/components/CommentShortcut.html",[0,0.369,50,0.985]],["body/components/CommentShortcut.html",[0,0.491,1,1.858,2,1.105,3,0.25,4,0.219,5,0.877,6,0.877,7,0.219,9,0.751,10,2.008,12,0.877,14,0.877,15,0.25,16,0.513,19,0.645,20,0.031,22,1.397,23,1.397,25,0.281,27,1.921,29,1.238,30,0.593,32,0.25,33,0.642,34,0.877,35,1.195,36,1.291,37,0.642,38,1.691,39,0.877,40,1.564,41,0.877,42,0.751,43,0.519,44,0.877,45,0.751,46,0.877,47,0.751,48,0.877,49,0.877,50,1.447,51,0.877,52,0.751,53,0.877,54,0.751,55,0.877,56,0.751,57,0.877,58,0.877,59,0.694,60,0.811,61,0.604,62,0.877,63,0.751,64,0.877,65,0.751,66,0.694,67,0.811,68,0.877,69,0.017,70,0.017,77,1.642,80,1.796,81,1.787,85,1.458,93,0.945,94,0.949,98,1.238,111,1.218,112,0.593,113,1.174,129,2.467,133,1.397,134,1.397,136,2.292,137,1.397,139,1.787,143,1.953,144,2.997,147,4.01,148,4.01,150,4.01,155,1.327,156,1.458,158,1.214,182,0.949,191,4.356,192,3.062,193,1.458,194,1.814,195,1.214,196,1.458,199,1.458,233,1.814,237,2.38,238,1.814,243,3.687,264,3.501,266,2.38,267,2.38,273,2.38,276,3.593,287,1.949,295,3.117,296,1.616,350,2.079,351,3.655,352,4.338,353,3.635,354,5.101,355,3.655,356,2.482,357,2.482,358,2.482,359,2.482,360,2.482,361,2.482,362,3.655,363,2.482,364,2.482,365,1.616,366,2.482,367,1.814,368,2.482,369,3.062,370,2.482,371,2.482,372,2.079,373,2.482,374,2.482,375,2.482,376,2.079,377,3.655,378,2.079]],["title/components/CommentUpvote.html",[0,0.369,52,0.985]],["body/components/CommentUpvote.html",[0,0.494,1,1.862,2,1.115,3,0.252,4,0.222,5,0.887,6,0.887,7,0.222,9,0.759,10,2.012,12,1.302,14,0.887,15,0.252,16,0.517,19,0.718,20,0.031,21,1.224,22,0.959,23,1.839,25,0.284,27,1.857,29,1.129,30,0.599,32,0.252,33,0.649,34,0.887,35,1.205,36,1.302,37,0.649,38,1.7,39,0.887,40,1.751,41,0.887,42,0.759,43,0.539,44,0.887,45,0.759,46,0.887,47,0.759,48,0.887,49,0.887,50,0.759,51,0.887,52,1.455,53,0.887,54,0.759,55,0.887,56,0.759,57,0.887,58,0.887,59,0.702,60,0.821,61,0.284,62,0.887,63,0.759,64,0.887,65,0.759,66,0.702,67,0.821,68,0.887,69,0.017,70,0.017,77,1.656,80,1.526,81,1.802,93,0.953,94,1.669,100,1.434,103,1.62,106,1.059,128,1.115,129,2.4,133,1.409,134,1.409,136,2.303,137,0.959,138,3.192,139,1.802,141,2.165,143,1.97,144,3.011,152,3.088,155,1.342,156,1.475,158,2.136,175,3.088,178,1.97,182,0.959,183,3.659,184,1.635,190,4.237,193,1.475,199,1.475,243,2.4,264,3.405,266,2.4,267,2.4,273,2.4,276,2.844,287,1.128,295,2.4,296,1.635,341,4.031,343,2.103,348,2.103,376,2.103,378,2.103,379,2.103,380,3.685,381,3.685,382,4.367,383,4.812,384,4.367,385,4.367,386,3.685,387,2.51,388,3.685,389,2.51,390,2.51,391,2.51,392,3.685,393,3.685,394,3.685,395,3.685,396,3.685,397,3.685,398,3.685,399,2.51,400,2.51,401,2.51,402,2.51,403,2.51,404,3.685,405,2.51,406,2.51,407,2.51,408,2.51,409,3.685,410,2.51]],["title/components/Comments.html",[0,0.369,25,0.369]],["body/components/Comments.html",[0,0.548,1,1.918,2,1.271,3,0.303,4,0.266,5,1.065,6,1.065,7,0.266,9,0.912,10,2.073,12,1.485,14,1.065,15,0.553,16,0.589,20,0.031,22,1.606,23,1.606,25,0.645,27,1.373,29,1.353,30,0.72,32,0.303,33,0.78,34,1.065,35,1.373,36,1.485,37,0.78,38,1.848,39,1.065,40,1.581,41,1.065,42,1.582,43,0.516,44,1.065,45,0.912,46,1.065,47,0.912,48,1.065,49,1.065,50,0.912,51,1.065,52,0.912,53,1.065,54,0.912,55,1.065,56,0.912,57,1.065,58,1.065,59,0.843,60,0.985,61,0.341,62,1.065,63,0.912,64,1.065,65,0.912,66,0.843,67,0.985,68,1.065,69,0.019,70,0.019,85,1.771,111,1.003,113,1.254,121,1.271,122,1.271,130,2.204,133,1.606,134,1.606,137,1.606,139,2.055,141,2.469,145,3.535,178,2.246,180,3.52,182,1.152,186,2.526,194,2.204,195,1.474,196,1.771,197,1.963,198,2.526,411,2.526,412,3.52,413,3.071,414,4.202,415,4.202,416,3.015,417,3.015,418,3.52,419,5.231,420,4.202,421,3.52,422,4.202,423,5.231,424,4.202,425,4.202,426,4.202,427,4.202]],["title/interfaces/DeleteComment.html",[88,0.504,124,0.985]],["body/interfaces/DeleteComment.html",[3,0.326,4,0.287,7,0.287,15,0.326,16,0.62,19,0.714,20,0.031,21,1.522,25,0.368,32,0.641,43,0.444,61,0.501,69,0.02,70,0.02,88,0.963,89,1.147,90,0.982,91,1.521,92,1.563,93,1.609,95,1.147,96,1.337,97,1.644,98,1.3,99,1.5,100,1.868,101,1.237,102,0.982,103,1.521,104,1.147,105,1.147,106,0.973,107,1.147,108,1.521,109,1.147,110,1.147,111,1.201,112,0.775,113,0.973,114,1.563,115,1.445,116,1.445,117,1.445,118,1.563,119,1.241,120,0.982,121,1.836,122,1.836,123,0.982,124,1.337,125,0.982,126,0.982,127,1.061,128,0.982]],["title/components/Footer.html",[0,0.369,54,0.985]],["body/components/Footer.html",[0,0.607,1,1.972,2,1.458,3,0.371,4,0.326,5,1.305,6,1.305,7,0.326,9,1.117,10,2.132,12,1.305,14,1.703,20,0.03,25,0.418,29,0.955,30,0.882,32,0.371,33,0.955,34,1.305,35,1.575,36,1.703,37,0.955,38,2.009,39,1.305,40,1.753,41,1.305,42,1.117,43,0.521,44,1.305,45,1.117,46,1.305,47,1.117,48,1.305,49,1.305,50,1.117,51,1.305,52,1.117,53,1.305,54,1.829,55,1.305,56,1.117,57,1.305,58,1.305,59,1.034,60,1.208,61,0.418,62,1.305,63,1.117,64,1.305,65,1.117,66,1.034,67,1.208,68,1.305,69,0.022,70,0.022,133,1.842,134,1.842,182,1.412,428,2.701,429,3.095,430,5.364,431,5.364,432,5.364,433,5.364,434,5.364,435,5.364]],["title/interfaces/Image.html",[88,0.504,108,0.985]],["body/interfaces/Image.html",[3,0.331,4,0.291,7,0.291,15,0.331,16,0.626,19,0.686,20,0.031,21,1.553,25,0.372,32,0.642,43,0.447,61,0.505,69,0.02,70,0.02,88,0.965,89,1.162,90,0.995,91,1.531,92,1.576,93,1.547,95,1.162,96,1.349,97,1.655,98,1.309,99,1.503,100,1.853,101,1.248,102,0.995,103,1.531,104,1.162,105,1.162,106,0.982,107,1.162,108,1.642,109,1.918,110,1.918,111,1.209,112,0.785,113,0.982,114,1.576,115,1.458,116,1.458,117,1.458,118,1.576,119,1.257,120,0.995,121,1.716,122,1.716,123,0.995,124,0.995,125,0.995,126,0.995,127,1.075,128,0.995]],["title/components/MainLayout.html",[0,0.369,56,0.985]],["body/components/MainLayout.html",[0,0.611,1,1.976,2,1.47,3,0.376,4,0.33,5,1.322,6,1.322,7,0.33,9,1.132,10,2.135,12,1.717,14,1.717,20,0.03,25,0.424,29,1.396,30,0.893,31,2.437,32,0.376,33,0.967,34,1.322,35,1.588,36,1.717,37,0.967,38,2.019,39,1.322,40,1.764,41,1.322,42,1.132,43,0.523,44,1.322,45,1.132,46,1.322,47,1.132,48,1.322,49,1.322,50,1.132,51,1.322,52,1.132,53,1.322,54,1.728,55,1.322,56,1.728,57,1.907,58,1.322,59,1.047,60,1.223,61,0.424,62,1.322,63,1.132,64,1.322,65,1.132,66,1.047,67,1.223,68,1.322,69,0.022,70,0.022,133,1.857,134,1.857,182,1.43,428,2.735,436,3.135,437,3.135,438,4.859,439,5.397,440,3.741]],["title/components/ModalDeleteComment.html",[0,0.369,59,0.911]],["body/components/ModalDeleteComment.html",[0,0.568,1,1.937,2,1.332,3,0.325,4,0.285,5,1.141,6,1.141,7,0.285,9,0.977,10,2.094,12,1.557,14,1.141,15,0.325,19,0.557,20,0.03,21,1.197,25,0.366,27,1.44,29,1.139,30,0.771,32,0.325,33,0.835,34,1.141,35,1.44,36,1.557,37,0.835,38,1.903,39,1.141,40,1.761,41,1.141,42,0.977,43,0.562,44,1.141,45,0.977,46,1.141,47,0.977,48,1.141,49,1.141,50,0.977,51,1.141,52,0.977,53,1.141,54,0.977,55,1.141,56,0.977,57,1.141,58,1.141,59,1.507,60,1.843,61,0.725,62,1.141,63,0.977,64,1.141,65,0.977,66,1.507,67,1.056,68,1.141,69,0.02,70,0.02,77,1.979,80,1.337,81,1.579,94,1.234,133,1.684,134,1.684,139,2.155,158,1.579,182,1.234,273,2.869,274,3.691,276,3.266,287,1.451,295,2.869,299,2.706,300,2.706,369,2.706,372,3.691,441,3.666,442,4.201,443,2.706,444,4.406,445,4.406,446,4.201,447,3.229,448,4.406,449,3.229,450,3.229,451,4.406,452,3.691,453,3.691,454,4.406,455,4.406]],["title/injectables/ModalDeleteCommentService.html",[240,1.914,365,2.122]],["body/injectables/ModalDeleteCommentService.html",[3,0.353,4,0.31,7,0.31,11,2.567,15,0.353,16,0.654,19,0.444,20,0.031,22,2,23,2,27,1.896,29,1.205,30,0.838,32,0.353,33,0.908,43,0.537,59,0.982,60,1.148,61,0.398,69,0.021,70,0.021,75,4.571,77,2.094,80,1.93,81,1.717,85,2.063,112,0.838,240,2.738,241,2.567,287,1.578,365,3.035,367,4.358,441,4.358,446,4.669,456,2.942,457,5.232,458,5.232,459,5.232,460,4.86,461,3.511,462,3.511,463,4.661,464,4.661,465,3.511,466,4.661,467,3.511,468,5.232,469,5.8,470,3.511,471,3.511,472,3.511,473,4.661,474,2.942,475,5.573,476,3.407,477,3.511,478,3.511,479,3.511,480,3.511,481,4.661,482,3.511,483,3.511,484,3.511,485,3.511,486,3.511,487,3.511,488,3.511,489,3.511]],["title/components/NotFound.html",[0,0.369,63,0.985]],["body/components/NotFound.html",[0,0.608,1,1.973,2,1.46,3,0.372,4,0.327,5,1.308,6,1.308,7,0.327,9,1.12,10,2.132,12,1.705,14,1.705,20,0.03,25,0.419,29,1.248,30,0.884,31,2.411,32,0.372,33,0.957,34,1.308,35,1.578,36,1.705,37,0.957,38,2.01,39,1.308,40,1.755,41,1.308,42,1.12,43,0.521,44,1.308,45,1.12,46,1.308,47,1.12,48,1.308,49,1.308,50,1.12,51,1.308,52,1.12,53,1.308,54,1.12,55,1.308,56,1.12,57,1.308,58,1.308,59,1.036,60,1.21,61,0.419,62,1.308,63,1.721,64,2.138,65,1.12,66,1.036,67,1.21,68,1.308,69,0.022,70,0.022,133,1.845,134,1.845,182,1.415,490,3.102,491,3.102,492,3.102,493,5.369,494,5.369,495,4.499,496,5.369,497,5.369]],["title/interfaces/Reply.html",[88,0.504,111,0.778]],["body/interfaces/Reply.html",[3,0.314,4,0.276,7,0.276,15,0.314,16,0.604,19,0.761,20,0.031,21,1.555,25,0.354,32,0.637,43,0.435,61,0.488,69,0.02,70,0.02,88,0.956,89,1.105,90,0.946,91,1.743,92,1.969,93,1.598,95,1.105,96,1.686,97,1.883,98,1.275,99,1.537,100,1.858,101,1.205,102,0.946,103,1.491,104,1.105,105,1.105,106,0.948,107,1.105,108,1.491,109,1.105,110,1.105,111,1.269,112,0.746,113,0.948,114,1.523,115,1.409,116,1.409,117,1.409,118,1.523,119,1.195,120,0.946,121,1.686,122,1.686,123,0.946,124,0.946,125,0.946,126,0.946,127,1.022,128,0.946]],["title/interfaces/ReplyComment.html",[88,0.504,125,0.985]],["body/interfaces/ReplyComment.html",[3,0.321,4,0.282,7,0.282,15,0.321,16,0.613,19,0.733,20,0.031,21,1.518,25,0.362,32,0.639,43,0.44,61,0.495,69,0.02,70,0.02,88,0.96,89,1.129,90,0.966,91,1.508,92,1.545,93,1.604,94,1.671,95,1.129,96,1.323,97,1.63,98,1.289,99,1.542,100,1.866,101,1.223,102,0.966,103,1.508,104,1.129,105,1.129,106,0.962,107,1.129,108,1.508,109,1.129,110,1.129,111,1.19,112,0.763,113,0.962,114,1.545,115,1.429,116,1.429,117,1.429,118,1.545,119,1.221,120,0.966,121,1.829,122,1.829,123,0.966,124,0.966,125,1.323,126,0.966,127,1.044,128,0.966]],["title/pipes/TimeAgoPipe.html",[333,2.122,340,1.914]],["body/pipes/TimeAgoPipe.html",[3,0.414,4,0.363,7,0.363,9,1.245,19,0.52,20,0.031,21,1.485,23,2.262,27,1.345,29,1.335,30,0.983,32,0.414,33,1.064,40,1.845,69,0.024,70,0.024,73,2.68,77,1.849,80,1.704,94,1.573,112,0.983,118,1.454,158,2.013,333,3.363,339,3.363,340,3.034,346,4.327,412,4.327,413,4.125,476,4.125,498,3.448,499,4.327,500,3.448,501,4.116,502,5.164,503,4.456,504,4.116,505,5.164,506,4.116,507,4.116,508,4.116,509,3.448,510,4.116,511,4.116,512,4.116,513,4.116]],["title/interfaces/UpdateComment.html",[88,0.504,123,0.985]],["body/interfaces/UpdateComment.html",[3,0.31,4,0.272,7,0.272,15,0.31,16,0.599,19,0.758,20,0.031,21,1.541,25,0.349,32,0.636,43,0.432,61,0.483,69,0.019,70,0.019,88,0.953,89,1.089,90,0.932,91,1.735,92,1.508,93,1.593,94,2.291,95,1.089,96,1.291,97,1.6,98,1.483,99,1.535,100,1.861,101,1.194,102,0.932,103,1.48,104,1.089,105,1.089,106,0.939,107,1.089,108,1.48,109,1.089,110,1.089,111,1.168,112,0.736,113,0.939,114,1.508,115,1.395,116,1.395,117,1.395,118,1.508,119,1.178,120,0.932,121,1.813,122,1.813,123,1.291,124,0.932,125,0.932,126,0.932,127,1.008,128,0.932]],["title/interfaces/UpdateStatus.html",[88,0.504,120,0.985]],["body/interfaces/UpdateStatus.html",[3,0.322,4,0.283,7,0.283,15,0.322,16,0.615,19,0.734,20,0.031,21,1.535,25,0.363,32,0.64,43,0.441,61,0.496,69,0.02,70,0.02,88,0.96,89,1.133,90,0.97,91,1.511,92,1.549,93,1.605,95,1.133,96,1.326,97,1.633,98,1.501,99,1.496,100,1.866,101,1.226,102,0.97,103,1.511,104,1.133,105,1.133,106,0.965,107,1.133,108,1.511,109,1.133,110,1.133,111,1.193,112,0.765,113,0.965,114,1.549,115,1.433,116,1.433,117,1.433,118,1.549,119,1.225,120,1.326,121,1.83,122,1.83,123,0.97,124,0.97,125,0.97,126,0.97,127,1.048,128,0.97]],["title/interfaces/UpvoteComment.html",[88,0.504,126,0.985]],["body/interfaces/UpvoteComment.html",[3,0.314,4,0.276,7,0.276,15,0.314,16,0.604,19,0.761,20,0.031,21,1.513,25,0.354,32,0.637,43,0.435,61,0.488,69,0.02,70,0.02,88,0.956,89,1.105,90,0.946,91,1.491,92,1.523,93,1.598,95,1.105,96,1.303,97,1.883,98,1.275,99,1.49,100,1.875,101,1.205,102,0.946,103,1.491,104,1.105,105,1.105,106,0.948,107,1.105,108,1.491,109,1.105,110,1.105,111,1.177,112,0.746,113,0.948,114,1.523,115,1.409,116,1.409,117,1.409,118,1.523,119,1.195,120,0.946,121,1.819,122,1.819,123,0.946,124,0.946,125,0.946,126,1.303,127,1.737,128,1.607]],["title/interfaces/User.html",[88,0.504,99,0.778]],["body/interfaces/User.html",[3,0.331,4,0.291,7,0.291,15,0.331,16,0.626,19,0.686,20,0.031,21,1.541,25,0.372,32,0.642,43,0.447,61,0.505,69,0.02,70,0.02,88,0.965,89,1.162,90,0.995,91,1.531,92,1.576,93,1.547,95,1.162,96,1.349,97,1.655,98,1.309,99,1.515,100,1.853,101,1.248,102,0.995,103,1.531,104,1.162,105,1.162,106,0.982,107,1.918,108,1.841,109,1.162,110,1.162,111,1.209,112,0.785,113,0.982,114,1.576,115,1.458,116,1.458,117,1.458,118,1.576,119,1.257,120,0.995,121,1.716,122,1.716,123,0.995,124,0.995,125,0.995,126,0.995,127,1.075,128,0.995]],["title/interfaces/UserData.html",[88,0.504,102,0.985]],["body/interfaces/UserData.html",[3,0.321,4,0.282,7,0.282,15,0.321,16,0.613,19,0.765,20,0.031,21,1.518,25,0.607,32,0.639,43,0.496,61,0.495,69,0.02,70,0.02,88,0.96,89,1.129,90,0.966,91,1.508,92,1.545,93,1.535,95,1.129,96,1.323,97,1.63,98,1.289,99,1.518,100,1.855,101,1.223,102,1.323,103,1.754,104,1.129,105,1.895,106,1.236,107,1.129,108,1.508,109,1.129,110,1.129,111,1.19,112,0.763,113,0.962,114,1.545,115,1.429,116,1.429,117,1.429,118,1.545,119,1.221,120,0.966,121,1.699,122,1.699,123,0.966,124,0.966,125,0.966,126,0.966,127,1.044,128,0.966,514,4.373]],["title/coverage.html",[515,3.713]],["body/coverage.html",[0,0.691,1,0.839,7,0.245,8,2.324,19,0.638,20,0.031,25,0.314,37,0.717,42,0.839,43,0.35,45,0.839,47,0.839,50,0.839,52,0.839,54,0.839,56,0.839,59,0.776,61,0.314,63,0.839,66,0.776,69,0.018,70,0.018,71,2.324,72,2.324,88,0.932,90,1.879,99,0.662,101,1.108,102,0.839,106,0.61,108,0.839,111,0.662,113,0.872,120,0.839,123,0.839,124,0.839,125,0.839,126,0.839,129,2.416,130,2.028,131,2.324,136,1.246,137,1.766,178,3.573,187,2.028,189,2.028,190,2.028,191,2.028,195,2.26,197,1.806,240,2.328,242,3.898,264,2.962,265,2.324,287,1.246,301,2.028,332,2.324,333,1.806,339,1.806,340,1.63,350,2.324,365,1.806,367,2.028,379,2.324,411,2.324,428,2.896,429,2.324,436,2.324,437,2.324,441,2.896,442,2.324,443,2.324,456,2.324,490,2.324,491,2.324,492,2.324,499,2.324,500,2.324,515,2.324,516,2.774,517,2.774,518,2.774,519,2.324,520,6.161,521,2.324,522,6.447,523,2.774,524,5.545,525,2.774,526,2.774,527,2.774,528,3.962,529,2.896,530,4.622,531,2.774,532,2.774,533,2.774,534,4.622,535,4.622,536,2.324,537,2.774,538,4.224,539,2.324,540,2.324,541,2.324,542,2.324,543,2.324,544,2.324,545,2.324,546,2.324,547,2.324,548,3.319,549,2.324,550,2.324,551,2.324,552,2.774,553,2.774]],["title/dependencies.html",[554,2.285,555,3.28]],["body/dependencies.html",[20,0.031,30,1.103,31,3.009,69,0.025,70,0.025,184,3.009,255,3.871,298,3.871,503,3.378,509,3.871,555,3.871,556,6.397,557,4.621,558,4.621,559,3.871,560,4.621,561,4.621,562,4.621,563,5.544,564,4.621,565,4.621,566,4.621,567,4.621,568,4.621,569,4.621,570,4.621,571,4.621,572,4.621]],["title/miscellaneous/functions.html",[573,1.458,574,3.28]],["body/miscellaneous/functions.html",[15,0.51,20,0.028,69,0.027,70,0.027,80,2.099,164,4.249,301,4.514,536,4.249,573,2.71,574,4.249,575,5.071]],["title/index.html",[15,0.274,576,2.728,577,2.728]],["body/index.html",[0,0.609,2,1.124,4,0.328,20,0.022,22,1.85,65,1.124,69,0.022,70,0.022,115,1.215,145,2.718,287,1.67,460,3.115,495,3.115,498,3.115,559,3.115,578,4.775,579,3.718,580,4.839,581,5.699,582,5.909,583,3.115,584,3.718,585,4.839,586,5.38,587,3.718,588,3.718,589,5.909,590,6.058,591,6.058,592,3.718,593,4.839,594,3.718,595,3.718,596,4.839,597,3.718,598,3.718,599,3.718,600,3.718,601,3.718,602,4.839,603,4.839,604,3.718,605,3.718,606,3.718,607,5.38,608,3.718,609,3.718,610,3.718,611,3.718,612,3.718,613,3.718,614,3.718,615,5.38,616,3.718,617,3.718,618,3.718,619,3.718,620,3.718,621,3.115,622,3.718,623,3.718,624,3.718,625,4.839,626,5.38,627,3.718,628,3.718,629,3.718,630,3.718,631,3.718,632,3.718,633,5.38,634,3.718,635,6.058,636,3.718,637,4.839,638,3.718,639,3.718,640,3.718,641,3.718,642,3.718,643,3.718,644,3.718,645,3.718,646,3.718,647,3.115,648,3.718,649,3.718,650,3.718,651,3.718,652,2.718,653,3.718]],["title/modules.html",[654,3.713]],["body/modules.html",[20,0.027,69,0.027,70,0.027,654,4.374]],["title/overview.html",[652,3.24]],["body/overview.html",[2,1.534,20,0.027,37,1.311,69,0.027,70,0.027,89,1.792,218,4.281,241,3.707,340,2.979,652,3.707,655,5.071,656,4.249,657,4.249]],["title/properties.html",[16,0.549,554,2.285]],["body/properties.html",[16,0.726,20,0.028,69,0.027,70,0.027,583,4.335,658,5.175]],["title/miscellaneous/typealiases.html",[573,1.458,659,3.915]],["body/miscellaneous/typealiases.html",[15,0.496,19,0.623,20,0.026,69,0.026,70,0.026,90,1.491,99,1.177,101,1.76,106,1.268,129,2.041,137,2.202,195,2.411,529,4.211,573,2.635,660,4.93,661,4.827,662,4.13]],["title/miscellaneous/variables.html",[573,1.458,663,3.28]],["body/miscellaneous/variables.html",[11,0.968,15,0.133,19,0.546,20,0.031,21,0.686,22,1.958,23,1.958,25,0.671,35,0.433,43,0.442,61,0.381,69,0.01,70,0.01,90,0.4,91,1.425,92,1.435,93,1.503,95,1.601,96,1.513,97,1.591,98,1.172,99,1.162,100,1.136,102,0.4,103,1.581,104,1.189,105,1.88,106,1.171,107,1.435,108,1.229,109,1.435,110,1.435,111,0.896,112,1.29,113,0.741,114,1.189,115,1.1,116,1.1,117,1.1,120,0.672,121,1.135,122,1.472,123,0.672,124,0.672,125,0.672,126,0.4,127,0.727,128,0.869,129,0.548,135,1.109,137,0.85,143,0.707,165,1.109,178,2.005,195,0.647,197,1.447,202,2.1,218,3.821,223,0.968,231,2.742,237,0.862,242,2.742,287,1.291,308,2.407,339,2.192,353,1.109,413,0.968,418,1.109,421,1.862,452,1.109,453,1.109,474,1.109,476,1.625,503,1.625,519,1.109,521,1.862,529,1.625,538,1.109,539,2.82,540,2.82,541,2.407,542,1.862,543,1.109,544,1.109,545,1.862,546,1.862,547,1.109,548,2.82,549,1.109,550,2.82,551,1.109,573,0.707,578,1.862,621,1.862,647,1.109,656,2.407,657,1.109,661,1.109,662,1.109,663,1.109,664,1.324,665,3.366,666,1.324,667,1.324,668,1.324,669,1.324,670,1.324,671,1.324,672,1.324,673,1.324,674,1.324,675,1.324,676,1.324,677,3.752,678,1.324,679,1.324,680,1.324,681,1.324,682,1.324,683,2.223,684,1.324,685,2.223,686,1.324,687,2.223,688,1.324,689,2.223,690,1.324,691,2.873,692,1.324,693,1.324,694,1.324,695,1.324,696,1.324,697,1.324,698,1.324,699,1.324,700,1.324,701,1.324,702,1.324,703,1.324,704,1.324,705,1.324,706,1.324,707,4.317,708,1.324,709,4.062,710,1.324,711,2.223,712,1.324,713,1.324,714,1.324,715,3.752,716,3.752,717,2.873,718,1.324,719,2.873,720,1.324,721,1.324,722,1.324,723,1.324,724,2.223,725,1.324,726,1.324,727,2.223,728,1.324,729,2.223,730,1.324,731,2.223,732,2.223,733,2.223,734,2.223,735,1.324,736,1.324,737,1.324,738,1.324,739,1.324,740,1.324,741,1.324,742,1.324,743,2.873,744,1.324,745,1.324,746,1.324,747,3.366,748,1.324,749,2.223,750,1.324,751,1.324,752,1.324,753,4.868,754,2.223,755,2.223,756,2.223,757,1.324,758,1.324,759,2.223,760,1.324,761,1.324,762,1.324,763,1.324,764,2.223,765,1.324,766,1.324,767,1.324,768,1.324,769,1.324,770,1.324,771,1.324,772,1.324,773,1.324,774,2.223,775,3.366,776,2.873,777,1.324,778,1.324,779,3.366,780,1.324,781,1.324,782,1.324,783,1.324,784,1.324,785,1.324,786,1.324,787,1.324,788,1.324,789,2.223,790,1.324,791,1.324,792,2.873,793,1.324,794,1.324,795,1.324,796,1.324,797,1.324,798,1.324,799,1.324,800,1.324,801,1.324,802,1.324,803,1.324,804,2.223,805,1.324,806,1.324,807,1.324,808,1.324,809,1.324,810,2.223,811,1.324,812,1.324,813,1.324,814,1.324,815,1.324,816,1.324,817,1.324,818,1.324,819,1.324,820,1.324,821,1.324,822,1.324,823,1.324,824,1.324,825,1.324,826,2.223,827,1.324,828,1.324,829,2.223,830,1.324,831,1.324,832,1.324,833,1.324,834,1.324,835,1.324,836,1.324,837,1.324,838,1.324,839,1.324,840,1.324,841,1.324,842,1.324,843,1.324,844,1.324,845,1.324,846,1.324,847,1.324,848,1.324]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":178,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":658,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["03t00:00:00.000z",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06t00:00:00.000z",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":218,"title":{},"body":{"components/CommentCard.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":657,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":393,"title":{},"body":{"components/CommentUpvote.html":{}}}],["11",{"_index":655,"title":{},"body":{"overview.html":{}}}],["11.1.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":656,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["20.0.1",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":584,"title":{},"body":{"index.html":{}}}],["2025",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22t00:00:00.000z",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29t00:00:00.000z",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["4.1.12",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":494,"title":{},"body":{"components/NotFound.html":{}}}],["5",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":398,"title":{},"body":{"components/CommentUpvote.html":{}}}],["7",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["8.5.6",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":395,"title":{},"body":{"components/CommentUpvote.html":{}}}],["accessors",{"_index":386,"title":{},"body":{"components/CommentUpvote.html":{}}}],["action",{"_index":369,"title":{},"body":{"components/CommentShortcut.html":{},"components/ModalDeleteComment.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["add",{"_index":325,"title":{},"body":{"components/CommentContent.html":{}}}],["additional",{"_index":645,"title":{},"body":{"index.html":{}}}],["addsuffix",{"_index":513,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["afterviewinit",{"_index":74,"title":{},"body":{"directives/AutoFocus.html":{}}}],["ago",{"_index":339,"title":{},"body":{"components/CommentHeader.html":{},"pipes/TimeAgoPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["agree",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ahead",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":660,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":478,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["always",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amyrobson",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amyrobson.png",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amyrobson.webp",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":581,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":184,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentUpvote.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":30,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"pipes/TimeAgoPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"components/CommentContent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":31,"title":{},"body":{"components/App.html":{},"components/MainLayout.html":{},"components/NotFound.html":{},"dependencies.html":{}}}],["anon",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["app/shared/directives/auto",{"_index":299,"title":{},"body":{"components/CommentContent.html":{},"components/ModalDeleteComment.html":{}}}],["app/shared/pipes/time",{"_index":338,"title":{},"body":{"components/CommentHeader.html":{}}}],["app/shared/utils/helper",{"_index":302,"title":{},"body":{"components/CommentContent.html":{}}}],["app/state",{"_index":198,"title":{},"body":{"components/CommentCard.html":{},"components/Comments.html":{}}}],["appautofocus",{"_index":67,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["appconfig",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":596,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationref",{"_index":471,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["appref",{"_index":457,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["arialabelcontent",{"_index":324,"title":{},"body":{"components/CommentContent.html":{}}}],["artifacts",{"_index":618,"title":{},"body":{"index.html":{}}}],["assets/images/avatars/image",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":353,"title":{},"body":{"components/CommentShortcut.html":{},"miscellaneous/variables.html":{}}}],["autofocus",{"_index":66,"title":{"directives/AutoFocus.html":{}},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["automatically",{"_index":597,"title":{},"body":{"index.html":{}}}],["available",{"_index":611,"title":{},"body":{"index.html":{}}}],["await",{"_index":370,"title":{},"body":{"components/CommentShortcut.html":{}}}],["awesome",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barrie",{"_index":434,"title":{},"body":{"components/Footer.html":{}}}],["before",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bg",{"_index":396,"title":{},"body":{"components/CommentUpvote.html":{}}}],["boolean",{"_index":164,"title":{},"body":{"components/CommentCard.html":{},"miscellaneous/functions.html":{}}}],["breakpoints",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":559,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":615,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":616,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":274,"title":{},"body":{"components/CommentContent.html":{},"components/ModalDeleteComment.html":{}}}],["canceledit",{"_index":146,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{}}}],["can’t",{"_index":454,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["card",{"_index":137,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["card'},{'name",{"_index":44,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["card.html",{"_index":140,"title":{},"body":{"components/CommentCard.html":{}}}],["card.scss",{"_index":142,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts",{"_index":131,"title":{},"body":{"components/CommentCard.html":{},"coverage.html":{}}}],["card.ts:107",{"_index":172,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:120",{"_index":176,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:135",{"_index":168,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:28",{"_index":177,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:30",{"_index":181,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:32",{"_index":161,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:33",{"_index":162,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:35",{"_index":159,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:36",{"_index":160,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:37",{"_index":163,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:38",{"_index":166,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:39",{"_index":167,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:41",{"_index":157,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:43",{"_index":179,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:45",{"_index":171,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:65",{"_index":174,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:82",{"_index":169,"title":{},"body":{"components/CommentCard.html":{}}}],["card.ts:94",{"_index":170,"title":{},"body":{"components/CommentCard.html":{}}}],["card/comment",{"_index":130,"title":{},"body":{"components/CommentCard.html":{},"components/Comments.html":{},"coverage.html":{}}}],["card/components/comment",{"_index":264,"title":{},"body":{"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"coverage.html":{}}}],["card/services/comment",{"_index":195,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentShortcut.html":{},"components/Comments.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["challenge",{"_index":430,"title":{},"body":{"components/Footer.html":{}}}],["changedetection",{"_index":133,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["changedetectionstrategy",{"_index":182,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["changedetectionstrategy.onpush",{"_index":134,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["choose",{"_index":641,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"pipes/TimeAgoPipe.html":{}}}],["classes",{"_index":383,"title":{},"body":{"components/CommentUpvote.html":{}}}],["classes(value",{"_index":403,"title":{},"body":{"components/CommentUpvote.html":{}}}],["clearcomments",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clearcurrentuser",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":582,"title":{},"body":{"index.html":{}}}],["close",{"_index":446,"title":{},"body":{"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{}}}],["code",{"_index":602,"title":{},"body":{"index.html":{}}}],["coded",{"_index":433,"title":{},"body":{"components/Footer.html":{}}}],["coding",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["come",{"_index":639,"title":{},"body":{"index.html":{}}}],["command",{"_index":633,"title":{},"body":{"index.html":{}}}],["comment",{"_index":43,"title":{"interfaces/Comment.html":{}},"body":{"components/App.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comment'},{'name",{"_index":62,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["comment.content",{"_index":308,"title":{},"body":{"components/CommentContent.html":{},"miscellaneous/variables.html":{}}}],["comment.createdat",{"_index":345,"title":{},"body":{"components/CommentHeader.html":{}}}],["comment.html",{"_index":444,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["comment.id",{"_index":420,"title":{},"body":{"components/Comments.html":{}}}],["comment.replies",{"_index":423,"title":{},"body":{"components/Comments.html":{}}}],["comment.replies!.length",{"_index":424,"title":{},"body":{"components/Comments.html":{}}}],["comment.replyingto",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comment.score",{"_index":422,"title":{},"body":{"components/Comments.html":{}}}],["comment.status",{"_index":421,"title":{},"body":{"components/Comments.html":{},"miscellaneous/variables.html":{}}}],["comment.ts",{"_index":443,"title":{},"body":{"components/ModalDeleteComment.html":{},"coverage.html":{}}}],["comment.ts:11",{"_index":447,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["comment.ts:13",{"_index":449,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["comment.user.username",{"_index":344,"title":{},"body":{"components/CommentHeader.html":{}}}],["comment/delete",{"_index":367,"title":{},"body":{"components/CommentShortcut.html":{},"injectables/ModalDeleteCommentService.html":{},"coverage.html":{}}}],["comment/modal",{"_index":442,"title":{},"body":{"components/ModalDeleteComment.html":{},"coverage.html":{}}}],["comment?.user?.username",{"_index":342,"title":{},"body":{"components/CommentHeader.html":{}}}],["comment?.user?.username;@let",{"_index":347,"title":{},"body":{"components/CommentHeader.html":{}}}],["commentcard",{"_index":42,"title":{"components/CommentCard.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["commentcardstate",{"_index":136,"title":{"injectables/CommentCardState.html":{}},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"coverage.html":{}}}],["commentcontent",{"_index":45,"title":{"components/CommentContent.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["commentheader",{"_index":47,"title":{"components/CommentHeader.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["comments",{"_index":25,"title":{"components/Comments.html":{}},"body":{"components/App.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comments'},{'name",{"_index":49,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["comments.html",{"_index":414,"title":{},"body":{"components/Comments.html":{}}}],["comments.length",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments.push(comment",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments.scss",{"_index":415,"title":{},"body":{"components/Comments.html":{}}}],["comments.splice(i",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments.splice(idx1",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[i].replies!.length",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[i].replies!.splice(j",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[i].replies![j].status",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[i].replies?.length",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[i].status",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].content",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].id",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].replies![idx2!].content",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].replies![idx2!].score",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].replies![idx2!].status",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].replies?.[idx2!]?.id",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].score",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1!].status",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1].id",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1].replies",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1].replies.splice(idx2",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1].replies?.[idx2]?.id",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1].replies[idx2].user.username",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comments[idx1].user.username",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commentshortcut",{"_index":50,"title":{"components/CommentShortcut.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["commentsraw",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commentstatus",{"_index":113,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentstatus)[keyof",{"_index":119,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["commentstatus.information",{"_index":202,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"miscellaneous/variables.html":{}}}],["commentstatus.information;@let",{"_index":239,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{}}}],["commentstatus.initial",{"_index":235,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{}}}],["commentstatus.reply",{"_index":231,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"miscellaneous/variables.html":{}}}],["commentstatus.send",{"_index":237,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"miscellaneous/variables.html":{}}}],["commentstatus.send;@let",{"_index":330,"title":{},"body":{"components/CommentContent.html":{}}}],["commentstatus.update",{"_index":223,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"miscellaneous/variables.html":{}}}],["commentstatus.update;@if",{"_index":331,"title":{},"body":{"components/CommentContent.html":{}}}],["commentstatustype",{"_index":101,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["commentupvote",{"_index":52,"title":{"components/CommentUpvote.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["compile",{"_index":617,"title":{},"body":{"index.html":{}}}],["complete",{"_index":609,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["componentref",{"_index":468,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"index.html":{},"overview.html":{}}}],["components/comment",{"_index":186,"title":{},"body":{"components/CommentCard.html":{},"components/Comments.html":{}}}],["components/footer/footer",{"_index":440,"title":{},"body":{"components/MainLayout.html":{}}}],["computed",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["considering",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(values",{"_index":220,"title":{},"body":{"components/CommentCard.html":{}}}],["const",{"_index":112,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"injectables/ModalDeleteCommentService.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["constructor(public",{"_index":199,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["constructor(state",{"_index":156,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["content",{"_index":91,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["content'},{'name",{"_index":46,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["content.html",{"_index":269,"title":{},"body":{"components/CommentContent.html":{}}}],["content.scss",{"_index":270,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts",{"_index":265,"title":{},"body":{"components/CommentContent.html":{},"coverage.html":{}}}],["content.ts:27",{"_index":286,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:28",{"_index":293,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:30",{"_index":278,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:31",{"_index":277,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:33",{"_index":292,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:35",{"_index":275,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:37",{"_index":294,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:39",{"_index":284,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:47",{"_index":285,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:72",{"_index":279,"title":{},"body":{"components/CommentContent.html":{}}}],["content.ts:87",{"_index":282,"title":{},"body":{"components/CommentContent.html":{}}}],["content/comment",{"_index":189,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"coverage.html":{}}}],["contentkeydown",{"_index":272,"title":{},"body":{"components/CommentContent.html":{}}}],["contentkeydown(event",{"_index":280,"title":{},"body":{"components/CommentContent.html":{}}}],["contentvalue",{"_index":305,"title":{},"body":{"components/CommentContent.html":{}}}],["couldn't",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":515,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createcomponent",{"_index":472,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["createcomponent(modaldeletecomment",{"_index":479,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["createdat",{"_index":92,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["css",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctrlorcmd",{"_index":313,"title":{},"body":{"components/CommentContent.html":{}}}],["currentuser",{"_index":106,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentHeader.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["currentuser;@if",{"_index":349,"title":{},"body":{"components/CommentHeader.html":{}}}],["currentuserraw",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":503,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":22,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"injectables/ModalDeleteCommentService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"pipes/TimeAgoPipe.html":{}}}],["delete",{"_index":61,"title":{},"body":{"components/App.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteaction",{"_index":147,"title":{},"body":{"components/CommentCard.html":{},"components/CommentShortcut.html":{}}}],["deletecomment",{"_index":124,"title":{"interfaces/DeleteComment.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":555,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["design",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailed",{"_index":649,"title":{},"body":{"index.html":{}}}],["development",{"_index":585,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{"directives/AutoFocus.html":{}},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":65,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"index.html":{}}}],["directory",{"_index":620,"title":{},"body":{"index.html":{}}}],["dist",{"_index":619,"title":{},"body":{"index.html":{}}}],["dive",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(this.modalref.location.nativeelement",{"_index":487,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["documentation",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["drag",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":636,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":638,"title":{},"body":{"index.html":{}}}],["edit",{"_index":354,"title":{},"body":{"components/CommentShortcut.html":{}}}],["editaction",{"_index":148,"title":{},"body":{"components/CommentCard.html":{},"components/CommentShortcut.html":{}}}],["editcontent",{"_index":326,"title":{},"body":{"components/CommentContent.html":{}}}],["el",{"_index":76,"title":{},"body":{"directives/AutoFocus.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["elementref",{"_index":84,"title":{},"body":{"directives/AutoFocus.html":{}}}],["emptycomments",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptycurrentuser",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encapsulation",{"_index":266,"title":{},"body":{"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["end",{"_index":635,"title":{},"body":{"index.html":{}}}],["enter",{"_index":317,"title":{},"body":{"components/CommentContent.html":{}}}],["environment",{"_index":548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environmentinjector",{"_index":473,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["escape",{"_index":321,"title":{},"body":{"components/CommentContent.html":{}}}],["event",{"_index":283,"title":{},"body":{"components/CommentContent.html":{}}}],["event.ctrlkey",{"_index":315,"title":{},"body":{"components/CommentContent.html":{}}}],["event.key",{"_index":316,"title":{},"body":{"components/CommentContent.html":{}}}],["event.metakey",{"_index":314,"title":{},"body":{"components/CommentContent.html":{}}}],["event.preventdefault",{"_index":318,"title":{},"body":{"components/CommentContent.html":{}}}],["eventemitter",{"_index":276,"title":{},"body":{"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{}}}],["everyone",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everything",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":590,"title":{},"body":{"index.html":{}}}],["execute",{"_index":627,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["factory",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":165,"title":{},"body":{"components/CommentCard.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["features/comments/components/comment",{"_index":194,"title":{},"body":{"components/CommentCard.html":{},"components/CommentShortcut.html":{},"components/Comments.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["files",{"_index":601,"title":{},"body":{"index.html":{}}}],["first",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fns",{"_index":509,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"dependencies.html":{}}}],["focus",{"_index":300,"title":{},"body":{"components/CommentContent.html":{},"components/ModalDeleteComment.html":{}}}],["focus.ts",{"_index":72,"title":{},"body":{"directives/AutoFocus.html":{},"coverage.html":{}}}],["focus.ts:7",{"_index":83,"title":{},"body":{"directives/AutoFocus.html":{}}}],["focus.ts:9",{"_index":79,"title":{},"body":{"directives/AutoFocus.html":{}}}],["focusing",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["following",{"_index":632,"title":{},"body":{"index.html":{}}}],["footer",{"_index":54,"title":{"components/Footer.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["footer'},{'name",{"_index":55,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["form",{"_index":271,"title":{},"body":{"components/CommentContent.html":{}}}],["formatdistancetonow",{"_index":506,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["formatdistancetonow(date",{"_index":512,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["formatiso(new",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":289,"title":{},"body":{"components/CommentContent.html":{}}}],["formervote",{"_index":127,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["formgroup",{"_index":288,"title":{},"body":{"components/CommentContent.html":{}}}],["found",{"_index":64,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["found.ts",{"_index":492,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["found/not",{"_index":491,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["foundation",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":640,"title":{},"body":{"index.html":{}}}],["freyre",{"_index":435,"title":{},"body":{"components/Footer.html":{}}}],["frontend",{"_index":431,"title":{},"body":{"components/Footer.html":{}}}],["function",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":574,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentals",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":607,"title":{},"body":{"index.html":{}}}],["generated",{"_index":579,"title":{},"body":{"index.html":{}}}],["getting",{"_index":576,"title":{"index.html":{}},"body":{}}],["getupvote",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["globalstore",{"_index":197,"title":{},"body":{"components/CommentCard.html":{},"components/Comments.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":496,"title":{},"body":{"components/NotFound.html":{}}}],["grey",{"_index":397,"title":{},"body":{"components/CommentUpvote.html":{}}}],["header",{"_index":188,"title":{},"body":{"components/CommentCard.html":{},"components/CommentHeader.html":{}}}],["header'},{'name",{"_index":48,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["header.html",{"_index":334,"title":{},"body":{"components/CommentHeader.html":{}}}],["header.scss",{"_index":335,"title":{},"body":{"components/CommentHeader.html":{}}}],["header.ts",{"_index":332,"title":{},"body":{"components/CommentHeader.html":{},"coverage.html":{}}}],["header.ts:13",{"_index":336,"title":{},"body":{"components/CommentHeader.html":{}}}],["header.ts:14",{"_index":337,"title":{},"body":{"components/CommentHeader.html":{}}}],["header/comment",{"_index":187,"title":{},"body":{"components/CommentCard.html":{},"components/CommentHeader.html":{},"coverage.html":{}}}],["helpbuilding",{"_index":614,"title":{},"body":{"index.html":{}}}],["home",{"_index":497,"title":{},"body":{"components/NotFound.html":{}}}],["hostclasses",{"_index":382,"title":{},"body":{"components/CommentUpvote.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":595,"title":{},"body":{"index.html":{}}}],["https://your",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'd",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":93,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["id.supabase.co",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["idx1",{"_index":121,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["idx2",{"_index":122,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":108,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":73,"title":{},"body":{"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"pipes/TimeAgoPipe.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"pipes/TimeAgoPipe.html":{}}}],["imports",{"_index":12,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["impressive",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["improved",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes",{"_index":604,"title":{},"body":{"index.html":{}}}],["including",{"_index":648,"title":{},"body":{"index.html":{}}}],["incredible",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["information",{"_index":115,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":114,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["initialdata",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialdata['comments",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialdata['currentuser",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialstatus",{"_index":153,"title":{},"body":{"components/CommentCard.html":{}}}],["inject",{"_index":85,"title":{},"body":{"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentShortcut.html":{},"components/Comments.html":{},"injectables/ModalDeleteCommentService.html":{}}}],["inject(applicationref",{"_index":464,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["inject(elementref",{"_index":82,"title":{},"body":{"directives/AutoFocus.html":{}}}],["inject(environmentinjector",{"_index":466,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["inject(globalstore",{"_index":180,"title":{},"body":{"components/CommentCard.html":{},"components/Comments.html":{}}}],["inject(modaldeletecommentservice",{"_index":362,"title":{},"body":{"components/CommentShortcut.html":{}}}],["inject(user_data_state",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":240,"title":{"injectables/CommentCardState.html":{},"injectables/ModalDeleteCommentService.html":{}},"body":{"injectables/CommentCardState.html":{},"injectables/ModalDeleteCommentService.html":{},"coverage.html":{}}}],["injectables",{"_index":241,"title":{},"body":{"injectables/CommentCardState.html":{},"injectables/ModalDeleteCommentService.html":{},"overview.html":{}}}],["injectiontoken('userdata",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":458,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["input",{"_index":183,"title":{},"body":{"components/CommentCard.html":{},"components/CommentUpvote.html":{}}}],["inputs",{"_index":152,"title":{},"body":{"components/CommentCard.html":{},"components/CommentUpvote.html":{}}}],["insight",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interactive",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["interface",{"_index":88,"title":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"overview.html":{}}}],["ismac",{"_index":312,"title":{},"body":{"components/CommentContent.html":{}}}],["ismacplatform",{"_index":301,"title":{},"body":{"components/CommentContent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isreply",{"_index":154,"title":{},"body":{"components/CommentCard.html":{}}}],["issendorreply",{"_index":236,"title":{},"body":{"components/CommentCard.html":{}}}],["isupdate",{"_index":327,"title":{},"body":{"components/CommentContent.html":{}}}],["isvalid",{"_index":508,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["isvalid(date",{"_index":511,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["isyourowncomment",{"_index":243,"title":{},"body":{"injectables/CommentCardState.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["it's",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["j",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(commentsraw",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(currentuserraw",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(upvoteraw",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juliusomo",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juliusomo.png",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juliusomo.webp",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jump",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":628,"title":{},"body":{"index.html":{}}}],["key",{"_index":104,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["keyboardevent",{"_index":281,"title":{},"body":{"components/CommentContent.html":{}}}],["knows",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastid",{"_index":105,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["lastidraw",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lay",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layout",{"_index":438,"title":{},"body":{"components/MainLayout.html":{}}}],["layout'},{'name",{"_index":58,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["layout.ts",{"_index":437,"title":{},"body":{"components/MainLayout.html":{},"coverage.html":{}}}],["layout/components/footer/footer.ts",{"_index":429,"title":{},"body":{"components/Footer.html":{},"coverage.html":{}}}],["layout/main",{"_index":436,"title":{},"body":{"components/MainLayout.html":{},"coverage.html":{}}}],["learn",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["library/framework",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":610,"title":{},"body":{"index.html":{}}}],["literal",{"_index":514,"title":{},"body":{"interfaces/UserData.html":{}}}],["local",{"_index":588,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('comments",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('currentuser",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('lastid",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('upvote",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.setitem(key",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggedinuser",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["looks",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":57,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["mainlayout",{"_index":56,"title":{"components/MainLayout.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxblagun",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxblagun.png",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxblagun.webp",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mentor",{"_index":432,"title":{},"body":{"components/Footer.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"pipes/TimeAgoPipe.html":{}}}],["methods",{"_index":77,"title":{},"body":{"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"pipes/TimeAgoPipe.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":60,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{}}}],["modaldelete",{"_index":352,"title":{},"body":{"components/CommentShortcut.html":{}}}],["modaldeletecomment",{"_index":59,"title":{"components/ModalDeleteComment.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["modaldeletecommentservice",{"_index":365,"title":{"injectables/ModalDeleteCommentService.html":{}},"body":{"components/CommentShortcut.html":{},"injectables/ModalDeleteCommentService.html":{},"coverage.html":{}}}],["modalref",{"_index":459,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["modals/delete",{"_index":366,"title":{},"body":{"components/CommentShortcut.html":{}}}],["models",{"_index":196,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/Comments.html":{}}}],["models.ts",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models/comment",{"_index":185,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{}}}],["modify",{"_index":600,"title":{},"body":{"index.html":{}}}],["modules",{"_index":654,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":647,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["moves",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nailed",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"pipes/TimeAgoPipe.html":{}}}],["namefor",{"_index":608,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":594,"title":{},"body":{"index.html":{}}}],["needs",{"_index":644,"title":{},"body":{"index.html":{}}}],["new",{"_index":287,"title":{},"body":{"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newest",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":591,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":78,"title":{},"body":{"directives/AutoFocus.html":{}}}],["ngclass",{"_index":138,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentUpvote.html":{}}}],["ngoninit",{"_index":149,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{}}}],["ngrx/signals",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["notfound",{"_index":63,"title":{"components/NotFound.html":{}},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{},"coverage.html":{}}}],["null",{"_index":469,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["number",{"_index":100,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onclose",{"_index":445,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["onclose(action",{"_index":448,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["one",{"_index":642,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":132,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{}}}],["open",{"_index":460,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{},"index.html":{}}}],["optimizes",{"_index":622,"title":{},"body":{"index.html":{}}}],["optional",{"_index":94,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{}}}],["output",{"_index":295,"title":{},"body":{"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{}}}],["outputs",{"_index":273,"title":{},"body":{"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{}}}],["overall",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":652,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":394,"title":{},"body":{"components/CommentUpvote.html":{}}}],["package",{"_index":554,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":495,"title":{},"body":{"components/NotFound.html":{},"index.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{},"pipes/TimeAgoPipe.html":{}}}],["parseint(lastidraw",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseiso",{"_index":507,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["parseiso(value",{"_index":510,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["patchstate(store",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":623,"title":{},"body":{"index.html":{}}}],["perhaps",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":340,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"components/CommentHeader.html":{},"pipes/TimeAgoPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe.ts",{"_index":500,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"coverage.html":{}}}],["pipe.ts:10",{"_index":504,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["pipes",{"_index":498,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":505,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["png",{"_index":109,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["postcomments",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postcss",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["powerful",{"_index":605,"title":{},"body":{"index.html":{}}}],["previous",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":75,"title":{},"body":{"directives/AutoFocus.html":{},"components/CommentContent.html":{},"injectables/ModalDeleteCommentService.html":{}}}],["production",{"_index":621,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":578,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":463,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["promise((resolve",{"_index":482,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["promise.reject('modal",{"_index":477,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{}},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"injectables/ModalDeleteCommentService.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"properties.html":{}}}],["protected",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":474,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{},"miscellaneous/variables.html":{}}}],["providehttpclient(withfetch",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":135,"title":{},"body":{"components/CommentCard.html":{},"miscellaneous/variables.html":{}}}],["providezonelesschangedetection",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":143,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"miscellaneous/variables.html":{}}}],["ramsesmiron",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ramsesmiron.png",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ramsesmiron.webp",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["react",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reactiveformsmodule",{"_index":268,"title":{},"body":{"components/CommentContent.html":{}}}],["really",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommend",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":653,"title":{},"body":{"index.html":{}}}],["references",{"_index":650,"title":{},"body":{"index.html":{}}}],["reload",{"_index":598,"title":{},"body":{"index.html":{}}}],["remove",{"_index":453,"title":{},"body":{"components/ModalDeleteComment.html":{},"miscellaneous/variables.html":{}}}],["replies",{"_index":95,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["replies.push(comment",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replies.splice(idx2",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply",{"_index":111,"title":{"interfaces/Reply.html":{}},"body":{"interfaces/Comment.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reply.id",{"_index":425,"title":{},"body":{"components/Comments.html":{}}}],["reply.score",{"_index":427,"title":{},"body":{"components/Comments.html":{}}}],["reply.status",{"_index":426,"title":{},"body":{"components/Comments.html":{}}}],["replyaction",{"_index":150,"title":{},"body":{"components/CommentCard.html":{},"components/CommentShortcut.html":{}}}],["replycomment",{"_index":125,"title":{"interfaces/ReplyComment.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["replyingto",{"_index":96,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["resolve(action",{"_index":484,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["resources",{"_index":646,"title":{},"body":{"index.html":{}}}],["responsiveness",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result",{"_index":481,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":476,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{},"pipes/TimeAgoPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":80,"title":{},"body":{"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"pipes/TimeAgoPipe.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/ModalDeleteCommentService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["rounded",{"_index":392,"title":{},"body":{"components/CommentUpvote.html":{}}}],["routerlink",{"_index":493,"title":{},"body":{"components/NotFound.html":{}}}],["routermodule",{"_index":439,"title":{},"body":{"components/MainLayout.html":{}}}],["routeroutlet",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":589,"title":{},"body":{"index.html":{}}}],["runner",{"_index":630,"title":{},"body":{"index.html":{}}}],["running",{"_index":593,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":603,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":612,"title":{},"body":{"index.html":{}}}],["score",{"_index":97,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["seems",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["send",{"_index":117,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentContent.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["serveonce",{"_index":592,"title":{},"body":{"index.html":{}}}],["server",{"_index":586,"title":{},"body":{"index.html":{}}}],["service",{"_index":368,"title":{},"body":{"components/CommentShortcut.html":{}}}],["service.ts",{"_index":456,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{},"coverage.html":{}}}],["service.ts:16",{"_index":465,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["service.ts:17",{"_index":467,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["service.ts:18",{"_index":470,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["service.ts:20",{"_index":462,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["service.ts:39",{"_index":461,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["services/comment",{"_index":193,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["set",{"_index":402,"title":{},"body":{"components/CommentUpvote.html":{}}}],["setclasses(value",{"_index":401,"title":{},"body":{"components/CommentUpvote.html":{}}}],["settimeout",{"_index":86,"title":{},"body":{"directives/AutoFocus.html":{}}}],["setupvote",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shortcut",{"_index":192,"title":{},"body":{"components/CommentCard.html":{},"components/CommentShortcut.html":{}}}],["shortcut'},{'name",{"_index":51,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["shortcut.html",{"_index":351,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts",{"_index":350,"title":{},"body":{"components/CommentShortcut.html":{},"coverage.html":{}}}],["shortcut.ts:23",{"_index":356,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:24",{"_index":358,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:25",{"_index":357,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:27",{"_index":363,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:29",{"_index":355,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:31",{"_index":364,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:33",{"_index":359,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:41",{"_index":361,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut.ts:45",{"_index":360,"title":{},"body":{"components/CommentShortcut.html":{}}}],["shortcut/comment",{"_index":191,"title":{},"body":{"components/CommentCard.html":{},"components/CommentShortcut.html":{},"coverage.html":{}}}],["showcontent",{"_index":234,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{}}}],["signal",{"_index":251,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["signal(commentstatus.initial",{"_index":259,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["signal(false",{"_index":263,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["signal(undefined",{"_index":260,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["signal(uuidv4",{"_index":257,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["signalstore",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soon",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"interfaces/DeleteComment.html":{},"components/Footer.html":{},"interfaces/Image.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"components/NotFound.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["speed",{"_index":624,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../comment",{"_index":662,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../comment.ts",{"_index":661,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../comments",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.secret.ts",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.ts",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../initial",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":8,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:10",{"_index":28,"title":{},"body":{"components/App.html":{}}}],["src/app/features/comments/comments.ts",{"_index":411,"title":{},"body":{"components/Comments.html":{},"coverage.html":{}}}],["src/app/features/comments/comments.ts:18",{"_index":416,"title":{},"body":{"components/Comments.html":{}}}],["src/app/features/comments/comments.ts:20",{"_index":417,"title":{},"body":{"components/Comments.html":{}}}],["src/app/features/comments/components/comment",{"_index":129,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/not",{"_index":490,"title":{},"body":{"components/NotFound.html":{},"coverage.html":{}}}],["src/app/layouts/main",{"_index":428,"title":{},"body":{"components/Footer.html":{},"components/MainLayout.html":{},"coverage.html":{}}}],["src/app/shared/directives/auto",{"_index":71,"title":{},"body":{"directives/AutoFocus.html":{},"coverage.html":{}}}],["src/app/shared/modals/delete",{"_index":441,"title":{},"body":{"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"coverage.html":{}}}],["src/app/shared/models/comment.ts",{"_index":90,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/pipes/time",{"_index":499,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"coverage.html":{}}}],["src/app/shared/utils/helper.ts",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/state/comments",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/state/index.ts",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/state/initial",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.development.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.secret.ts",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":412,"title":{},"body":{"components/Comments.html":{},"pipes/TimeAgoPipe.html":{}}}],["start",{"_index":587,"title":{},"body":{"index.html":{}}}],["started",{"_index":577,"title":{"index.html":{}},"body":{}}],["state",{"_index":144,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["state.comment",{"_index":323,"title":{},"body":{"components/CommentContent.html":{},"components/CommentHeader.html":{}}}],["state.comment();@let",{"_index":329,"title":{},"body":{"components/CommentContent.html":{},"components/CommentHeader.html":{}}}],["state.comment()?.id",{"_index":376,"title":{},"body":{"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["state.comment()?.id;@let",{"_index":378,"title":{},"body":{"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["state.comment()?.score",{"_index":409,"title":{},"body":{"components/CommentUpvote.html":{}}}],["state.comment()?.user?.username",{"_index":408,"title":{},"body":{"components/CommentUpvote.html":{}}}],["state.comment()?.user?.username;@let",{"_index":410,"title":{},"body":{"components/CommentUpvote.html":{}}}],["state.currentuser",{"_index":328,"title":{},"body":{"components/CommentContent.html":{}}}],["state.currentuser()?.username",{"_index":343,"title":{},"body":{"components/CommentHeader.html":{},"components/CommentUpvote.html":{}}}],["state.currentuser()?.username;@let",{"_index":348,"title":{},"body":{"components/CommentHeader.html":{},"components/CommentUpvote.html":{}}}],["state.isyourowncomment",{"_index":377,"title":{},"body":{"components/CommentShortcut.html":{}}}],["state.status",{"_index":233,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{}}}],["state.status();@let",{"_index":238,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{}}}],["state.ts",{"_index":242,"title":{},"body":{"injectables/CommentCardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.ts:11",{"_index":252,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["state.ts:12",{"_index":250,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["state.ts:13",{"_index":247,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["state.ts:14",{"_index":248,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["state.ts:15",{"_index":249,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["state.ts:16",{"_index":245,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["statements",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":98,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["stay",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["still",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":145,"title":{},"body":{"components/CommentCard.html":{},"components/Comments.html":{},"index.html":{}}}],["store.comments",{"_index":418,"title":{},"body":{"components/Comments.html":{},"miscellaneous/variables.html":{}}}],["store.currentuser",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.lastid",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.upvote()[id",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":21,"title":{},"body":{"components/App.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"components/ModalDeleteComment.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["structuredclone(store.comments",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["structuredclone(store.upvote",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":141,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{}}}],["such",{"_index":613,"title":{},"body":{"index.html":{}}}],["suits",{"_index":643,"title":{},"body":{"index.html":{}}}],["supabaseanonkey",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supabaseurl",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sure",{"_index":451,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["table",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["tailwindcss",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["tailwindcss/postcss",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["template",{"_index":14,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["templateurl",{"_index":139,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/ModalDeleteComment.html":{}}}],["tempting",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":629,"title":{},"body":{"index.html":{}}}],["testing",{"_index":637,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":634,"title":{},"body":{"index.html":{}}}],["tests",{"_index":626,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["think",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.appref.attachview(this.modalref.hostview",{"_index":486,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.appref.detachview(this.modalref.hostview",{"_index":488,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.cancel.emit",{"_index":311,"title":{},"body":{"components/CommentContent.html":{}}}],["this.canceledit",{"_index":322,"title":{},"body":{"components/CommentContent.html":{}}}],["this.close",{"_index":485,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.close.emit(action",{"_index":450,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["this.comment",{"_index":205,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{}}}],["this.comment!.id",{"_index":226,"title":{},"body":{"components/CommentCard.html":{}}}],["this.comment.id",{"_index":207,"title":{},"body":{"components/CommentCard.html":{}}}],["this.comment?.id",{"_index":225,"title":{},"body":{"components/CommentCard.html":{}}}],["this.comment?.score",{"_index":228,"title":{},"body":{"components/CommentCard.html":{}}}],["this.comment?.status",{"_index":201,"title":{},"body":{"components/CommentCard.html":{}}}],["this.comment?.user?.username",{"_index":211,"title":{},"body":{"components/CommentCard.html":{}}}],["this.content.emit(contentvalue",{"_index":310,"title":{},"body":{"components/CommentContent.html":{}}}],["this.currentuser",{"_index":209,"title":{},"body":{"components/CommentCard.html":{},"injectables/CommentCardState.html":{}}}],["this.currentuser?.username",{"_index":212,"title":{},"body":{"components/CommentCard.html":{}}}],["this.delete.emit",{"_index":373,"title":{},"body":{"components/CommentShortcut.html":{}}}],["this.deleteaction",{"_index":232,"title":{},"body":{"components/CommentCard.html":{}}}],["this.edit.emit",{"_index":375,"title":{},"body":{"components/CommentShortcut.html":{}}}],["this.el.nativeelement.focus",{"_index":87,"title":{},"body":{"directives/AutoFocus.html":{}}}],["this.form.get('content')!.value",{"_index":306,"title":{},"body":{"components/CommentContent.html":{}}}],["this.form.patchvalue",{"_index":304,"title":{},"body":{"components/CommentContent.html":{}}}],["this.form.valid",{"_index":319,"title":{},"body":{"components/CommentContent.html":{}}}],["this.hostclasses",{"_index":404,"title":{},"body":{"components/CommentUpvote.html":{}}}],["this.id",{"_index":206,"title":{},"body":{"components/CommentCard.html":{}}}],["this.idx1",{"_index":216,"title":{},"body":{"components/CommentCard.html":{}}}],["this.idx2",{"_index":217,"title":{},"body":{"components/CommentCard.html":{}}}],["this.initialstatus",{"_index":200,"title":{},"body":{"components/CommentCard.html":{}}}],["this.injector",{"_index":480,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.isyourowncomment",{"_index":262,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["this.modaldelete.open",{"_index":371,"title":{},"body":{"components/CommentShortcut.html":{}}}],["this.modalref",{"_index":475,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.modalref!.instance.close.subscribe((action",{"_index":483,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.modalref.destroy",{"_index":489,"title":{},"body":{"injectables/ModalDeleteCommentService.html":{}}}],["this.reply.emit",{"_index":374,"title":{},"body":{"components/CommentShortcut.html":{}}}],["this.replyingto",{"_index":261,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["this.state.comment",{"_index":307,"title":{},"body":{"components/CommentContent.html":{}}}],["this.state.comment()?.content",{"_index":303,"title":{},"body":{"components/CommentContent.html":{}}}],["this.state.comment.set(comment",{"_index":309,"title":{},"body":{"components/CommentContent.html":{}}}],["this.state.comment.set(this.comment",{"_index":208,"title":{},"body":{"components/CommentCard.html":{}}}],["this.state.currentuser",{"_index":219,"title":{},"body":{"components/CommentCard.html":{}}}],["this.state.currentuser.set(this.currentuser",{"_index":210,"title":{},"body":{"components/CommentCard.html":{}}}],["this.state.isyourowncomment.set(true",{"_index":213,"title":{},"body":{"components/CommentCard.html":{}}}],["this.state.replyingto.set(this.replyingto",{"_index":204,"title":{},"body":{"components/CommentCard.html":{}}}],["this.state.status",{"_index":214,"title":{},"body":{"components/CommentCard.html":{},"components/CommentContent.html":{}}}],["this.state.status.set(status",{"_index":203,"title":{},"body":{"components/CommentCard.html":{}}}],["this.status",{"_index":258,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["this.store.deletecomment(values",{"_index":222,"title":{},"body":{"components/CommentCard.html":{}}}],["this.store.getupvote(this.id",{"_index":229,"title":{},"body":{"components/CommentCard.html":{}}}],["this.store.replycomment(values",{"_index":227,"title":{},"body":{"components/CommentCard.html":{}}}],["this.store.setupvote(values",{"_index":230,"title":{},"body":{"components/CommentCard.html":{}}}],["this.store.updatecomment(values",{"_index":221,"title":{},"body":{"components/CommentCard.html":{}}}],["this.store.updatestatus(values",{"_index":224,"title":{},"body":{"components/CommentCard.html":{}}}],["this.uniqueid",{"_index":256,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["this.update",{"_index":320,"title":{},"body":{"components/CommentContent.html":{}}}],["this.updatevote.emit(0",{"_index":406,"title":{},"body":{"components/CommentUpvote.html":{}}}],["this.updatevote.emit(vote",{"_index":407,"title":{},"body":{"components/CommentUpvote.html":{}}}],["this.wasupvoted",{"_index":405,"title":{},"body":{"components/CommentUpvote.html":{}}}],["though",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeago",{"_index":346,"title":{},"body":{"components/CommentHeader.html":{},"pipes/TimeAgoPipe.html":{}}}],["timeagopipe",{"_index":333,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"components/CommentHeader.html":{},"pipes/TimeAgoPipe.html":{},"coverage.html":{}}}],["title",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["tools",{"_index":606,"title":{},"body":{"index.html":{}}}],["track",{"_index":419,"title":{},"body":{"components/Comments.html":{}}}],["transform",{"_index":501,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["transform(value",{"_index":502,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["true",{"_index":413,"title":{},"body":{"components/Comments.html":{},"pipes/TimeAgoPipe.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"components/App.html":{},"interfaces/Comment.html":{},"components/CommentCard.html":{},"injectables/CommentCardState.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":659,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":118,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{}}}],["undefined",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undone",{"_index":455,"title":{},"body":{"components/ModalDeleteComment.html":{}}}],["uniqueid",{"_index":244,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["unit",{"_index":625,"title":{},"body":{"index.html":{}}}],["update",{"_index":116,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentContent.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["updatecomment",{"_index":123,"title":{"interfaces/UpdateComment.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatecontent",{"_index":151,"title":{},"body":{"components/CommentCard.html":{}}}],["updatecontent(content",{"_index":173,"title":{},"body":{"components/CommentCard.html":{}}}],["updatestatus",{"_index":120,"title":{"interfaces/UpdateStatus.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatestorage",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatestorage(100",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatestorage(comments",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatestorage(currentuser",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatestorage(initialdata['comments",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatestorage(initialdata['currentuser",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatestorage(upvote",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatevote",{"_index":385,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote",{"_index":103,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["upvote'},{'name",{"_index":53,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["upvote(vote",{"_index":175,"title":{},"body":{"components/CommentCard.html":{},"components/CommentUpvote.html":{}}}],["upvote.html",{"_index":380,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.scss",{"_index":381,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts",{"_index":379,"title":{},"body":{"components/CommentUpvote.html":{},"coverage.html":{}}}],["upvote.ts:22",{"_index":389,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts:23",{"_index":390,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts:25",{"_index":399,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts:28",{"_index":388,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts:30",{"_index":387,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts:32",{"_index":400,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote.ts:34",{"_index":391,"title":{},"body":{"components/CommentUpvote.html":{}}}],["upvote/comment",{"_index":190,"title":{},"body":{"components/CommentCard.html":{},"components/CommentUpvote.html":{},"coverage.html":{}}}],["upvote[id",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upvotecomment",{"_index":126,"title":{"interfaces/UpvoteComment.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upvoteraw",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":631,"title":{},"body":{"index.html":{}}}],["user",{"_index":99,"title":{"interfaces/User.html":{}},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user_data_state",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercomment",{"_index":341,"title":{},"body":{"components/CommentHeader.html":{},"components/CommentUpvote.html":{}}}],["userdata",{"_index":102,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":107,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":580,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":255,"title":{},"body":{"injectables/CommentCardState.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":254,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["v4",{"_index":253,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["validators",{"_index":297,"title":{},"body":{"components/CommentContent.html":{}}}],["validators.minlength(1",{"_index":291,"title":{},"body":{"components/CommentContent.html":{}}}],["validators.required",{"_index":290,"title":{},"body":{"components/CommentContent.html":{}}}],["value",{"_index":23,"title":{},"body":{"components/App.html":{},"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"injectables/ModalDeleteCommentService.html":{},"pipes/TimeAgoPipe.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":215,"title":{},"body":{"components/CommentCard.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/App.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/Comments.html":{},"components/Footer.html":{},"components/MainLayout.html":{},"components/ModalDeleteComment.html":{},"components/NotFound.html":{}}}],["variable",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":663,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":583,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viewencapsulation",{"_index":296,"title":{},"body":{"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["viewencapsulation.none",{"_index":267,"title":{},"body":{"components/CommentContent.html":{},"components/CommentHeader.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{}}}],["visit",{"_index":651,"title":{},"body":{"index.html":{}}}],["void",{"_index":81,"title":{},"body":{"directives/AutoFocus.html":{},"components/CommentCard.html":{},"components/CommentContent.html":{},"components/CommentShortcut.html":{},"components/CommentUpvote.html":{},"components/ModalDeleteComment.html":{},"injectables/ModalDeleteCommentService.html":{}}}],["vote",{"_index":128,"title":{},"body":{"interfaces/Comment.html":{},"components/CommentCard.html":{},"components/CommentUpvote.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":452,"title":{},"body":{"components/ModalDeleteComment.html":{},"miscellaneous/variables.html":{}}}],["wasupvoted",{"_index":384,"title":{},"body":{"components/CommentUpvote.html":{}}}],["webp",{"_index":110,"title":{},"body":{"interfaces/Comment.html":{},"interfaces/DeleteComment.html":{},"interfaces/Image.html":{},"interfaces/Reply.html":{},"interfaces/ReplyComment.html":{},"interfaces/UpdateComment.html":{},"interfaces/UpdateStatus.html":{},"interfaces/UpvoteComment.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"miscellaneous/variables.html":{}}}],["well",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whenever",{"_index":599,"title":{},"body":{"index.html":{}}}],["withhashlocation",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withmethods((store",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withstate",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["woah",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writablesignal",{"_index":246,"title":{},"body":{"injectables/CommentCardState.html":{}}}],["yes",{"_index":372,"title":{},"body":{"components/CommentShortcut.html":{},"components/ModalDeleteComment.html":{}}}],["you're",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you've",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Interactive comments section'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  template: ``,\n})\nexport class App {\n  protected title = 'Interactive comments section';\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoFocus.html":{"url":"directives/AutoFocus.html","title":"directive - AutoFocus","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AutoFocus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/auto-focus.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appAutoFocus]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                el\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/auto-focus.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ElementRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/auto-focus.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, inject } from '@angular/core';\n\n@Directive({\n  selector: '[appAutoFocus]',\n})\nexport class AutoFocus implements AfterViewInit {\n  private el = inject(ElementRef);\n\n  ngAfterViewInit() {\n    setTimeout(() => this.el.nativeElement.focus());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comment.html":{"url":"interfaces/Comment.html","title":"interface - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyingTo\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replies:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyingTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyingTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         CommentStatusType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommentStatusType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentCard.html":{"url":"components/CommentCard.html","title":"component - CommentCard","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/comments/components/comment-card/comment-card.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CommentCardState\n                \n            \n\n\n            \n                selector\n                app-comment-card\n            \n\n\n            \n                imports\n                \n                            NgClass\n                                CommentHeader\n                                CommentContent\n                                CommentUpvote\n                                CommentShortcut\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./comment-card.html\n            \n\n\n\n            \n                styleUrl\n                ./comment-card.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CommentStatus\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEdit\n                            \n                            \n                                deleteAction\n                            \n                            \n                                editAction\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                replyAction\n                            \n                            \n                                updateContent\n                            \n                            \n                                upvote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                currentUser\n                            \n                            \n                                idx1\n                            \n                            \n                                idx2\n                            \n                            \n                                initialStatus\n                            \n                            \n                                isReply\n                            \n                            \n                                replyingTo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: CommentCardState)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/comments/components/comment-card/comment-card.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        CommentCardState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        comment\n                    \n                \n                \n                    \n                        Type :         Comment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         CurrentUser\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        idx1\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        idx2\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialStatus\n                    \n                \n                \n                    \n                        Type :         CommentStatusType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isReply\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        replyingTo\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/comment-card.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEdit\n                        \n                    \n                \n            \n            \n                \ncancelEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAction\n                        \n                    \n                \n            \n            \n                \ndeleteAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editAction\n                        \n                    \n                \n            \n            \n                \neditAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replyAction\n                        \n                    \n                \n            \n            \n                \nreplyAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContent\n                        \n                    \n                \n            \n            \n                \nupdateContent(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upvote\n                        \n                    \n                \n            \n            \n                \nupvote(vote: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/comment-card.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vote\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CommentStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CommentStatus\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/comment-card.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/comment-card.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommentCardState\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/comment-card.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GlobalStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/comment-card.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, Input, OnInit } from '@angular/core';\n\nimport { NgClass } from '@angular/common';\n\nimport { Comment, CurrentUser } from '@models/comment';\nimport { CommentHeader } from './components/comment-header/comment-header';\nimport { CommentContent } from './components/comment-content/comment-content';\nimport { CommentUpvote } from './components/comment-upvote/comment-upvote';\nimport { CommentShortcut } from './components/comment-shortcut/comment-shortcut';\n\nimport { CommentCardState } from './services/comment-card-state';\n\nimport {\n  CommentStatusType,\n  CommentStatus,\n} from '@features/comments/components/comment-card/services/comment-card-models';\nimport { GlobalStore } from '@app/state';\n\n@Component({\n  selector: 'app-comment-card',\n  imports: [NgClass, CommentHeader, CommentContent, CommentUpvote, CommentShortcut],\n  templateUrl: './comment-card.html',\n  styleUrl: './comment-card.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CommentCardState],\n})\nexport class CommentCard implements OnInit {\n  CommentStatus = CommentStatus;\n\n  store = inject(GlobalStore);\n\n  @Input() idx1?: number;\n  @Input() idx2?: number;\n\n  @Input() comment?: Comment;\n  @Input() currentUser?: CurrentUser;\n  @Input() initialStatus?: CommentStatusType;\n  @Input() isReply: boolean = false;\n  @Input() replyingTo: string = '';\n\n  id: number = 0;\n\n  constructor(public state: CommentCardState) {}\n\n  ngOnInit() {\n    const status = this.initialStatus || this.comment?.status || CommentStatus.INFORMATION;\n\n    this.state.status.set(status);\n    this.state.replyingTo.set(this.replyingTo ?? '');\n\n    if (this.comment) {\n      this.id = this.comment.id;\n      this.state.comment.set(this.comment);\n    }\n\n    if (this.currentUser) {\n      this.state.currentUser.set(this.currentUser);\n    }\n\n    if (this.comment?.user?.username === this.currentUser?.username) {\n      this.state.isYourOwnComment.set(true);\n    }\n  }\n\n  updateContent(content: string) {\n    const status = this.state.status()!;\n\n    const values = {\n      idx1: this.idx1,\n      idx2: this.idx2 ?? -1,\n      id: this.id,\n      content,\n      user: this.state.currentUser(),\n      status,\n    };\n\n    console.log(values);\n\n    this.store.updateComment(values);\n  }\n\n  deleteAction() {\n    if (this.id && this.idx1 !== -1) {\n      const values = {\n        idx1: this.idx1!,\n        idx2: this.idx2 ?? -1,\n        id: this.id,\n      };\n\n      this.store.deleteComment(values);\n    }\n  }\n\n  editAction() {\n    if (this.id && this.idx1 !== -1) {\n      const values = {\n        idx1: this.idx1!,\n        idx2: this.idx2 ?? -1,\n        id: this.id,\n        status: CommentStatus.UPDATE,\n      };\n\n      this.store.updateStatus(values);\n    }\n  }\n\n  replyAction() {\n    if (this.comment?.id && this.idx1 !== -1) {\n      const values = {\n        idx1: this.idx1!,\n        idx2: this.idx2 ?? -1,\n        id: this.comment!.id,\n        user: this.state.currentUser(),\n      };\n\n      this.store.replyComment(values);\n    }\n  }\n\n  upvote(vote: number) {\n    if (this.comment?.id && this.idx1 !== -1) {\n      const values = {\n        idx1: this.idx1!,\n        idx2: this.idx2 ?? -1,\n        id: this.id,\n        score: this.comment?.score ?? 0,\n        formerVote: this.store.getUpvote(this.id) ?? 0,\n        vote,\n      };\n\n      this.store.setUpvote(values);\n    }\n  }\n\n  cancelEdit() {\n    if (this.state.status() === CommentStatus.REPLY) {\n      this.deleteAction();\n    } else if (this.id && this.idx1 !== -1) {\n      const values = {\n        idx1: this.idx1!,\n        idx2: this.idx2 ?? -1,\n        id: this.id,\n        status: CommentStatus.INFORMATION,\n      };\n\n      this.store.updateStatus(values);\n    }\n  }\n}\n\n    \n\n    \n        @let status = state.status();\n@let showContent = status === CommentStatus.INITIAL || status === CommentStatus.INFORMATION;\n@let isSendOrReply = status === CommentStatus.SEND || status === CommentStatus.REPLY;\n\n\n  @if (!isSendOrReply) {\n    \n  }\n\n  \n\n  @if (!isSendOrReply) {\n    \n  }\n\n  @if (!isSendOrReply) {\n    \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let status = state.status();@let showContent = status === CommentStatus.INITIAL || status === CommentStatus.INFORMATION;@let isSendOrReply = status === CommentStatus.SEND || status === CommentStatus.REPLY;  @if (!isSendOrReply) {      }    @if (!isSendOrReply) {      }  @if (!isSendOrReply) {      }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentCard'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentCardState.html":{"url":"injectables/CommentCardState.html","title":"injectable - CommentCardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentCardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/comments/components/comment-card/services/comment-card-state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                currentUser\n                            \n                            \n                                isYourOwnComment\n                            \n                            \n                                replyingTo\n                            \n                            \n                                status\n                            \n                            \n                                uniqueId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:16\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isYourOwnComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replyingTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniqueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/services/comment-card-state.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Signal, signal, WritableSignal } from '@angular/core';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Comment, CurrentUser } from '@models/comment';\n\nimport { CommentStatus, CommentStatusType } from './comment-card-models';\n\n@Injectable()\nexport class CommentCardState {\n  uniqueId: Signal;\n  status: WritableSignal;\n  comment: WritableSignal;\n  currentUser: WritableSignal;\n  replyingTo: WritableSignal;\n  isYourOwnComment: WritableSignal;\n\n  constructor() {\n    this.uniqueId = signal(uuidv4());\n    this.status = signal(CommentStatus.INITIAL);\n    this.comment = signal(undefined);\n    this.currentUser = signal(undefined);\n    this.replyingTo = signal('');\n    this.isYourOwnComment = signal(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentContent.html":{"url":"components/CommentContent.html","title":"component - CommentContent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment-content\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                                AutoFocus\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./comment-content.html\n            \n\n\n\n            \n                styleUrl\n                ./comment-content.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CommentStatus\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cancelEdit\n                            \n                            \n                                contentKeyDown\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                content\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: CommentCardState)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        CommentCardState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cancelEdit\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancelEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contentKeyDown\n                        \n                    \n                \n            \n            \n                \ncontentKeyDown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CommentStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CommentStatus\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    content: new FormControl('', [Validators.required, Validators.minLength(1)]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommentCardState\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommentCardState } from '../../services/comment-card-state';\n\nimport { CommentStatus } from '../../services/comment-card-models';\n\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NgClass } from '@angular/common';\nimport { AutoFocus } from '@app/shared/directives/auto-focus';\nimport { isMacPlatform } from '@app/shared/utils/helper';\n\n@Component({\n  selector: 'app-comment-content',\n  imports: [ReactiveFormsModule, NgClass, AutoFocus],\n  templateUrl: './comment-content.html',\n  styleUrl: './comment-content.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CommentContent implements OnInit {\n  CommentStatus = CommentStatus;\n  id: number = 0;\n\n  @Output() content = new EventEmitter();\n  @Output() cancel = new EventEmitter();\n\n  form = new FormGroup({\n    content: new FormControl('', [Validators.required, Validators.minLength(1)]),\n  });\n\n  constructor(public state: CommentCardState) {}\n\n  ngOnInit() {\n    const content = this.state.comment()?.content ?? '';\n\n    this.form.patchValue({\n      content,\n    });\n  }\n\n  update() {\n    const contentValue = this.form.get('content')!.value;\n\n    if (this.state.status() === CommentStatus.SEND) {\n      this.form.patchValue({\n        content: '',\n      });\n    }\n\n    if (\n      this.state.status() === CommentStatus.REPLY ||\n      this.state.status() === CommentStatus.UPDATE\n    ) {\n      const comment = this.state.comment();\n\n      if (comment) {\n        comment.content = contentValue ?? '';\n\n        this.state.comment.set(comment);\n      }\n    }\n\n    this.content.emit(contentValue!);\n  }\n\n  private cancelEdit() {\n    if (this.state.status() === CommentStatus.SEND) {\n      this.form.patchValue({\n        content: '',\n      });\n    }\n\n    if (\n      this.state.status() === CommentStatus.REPLY ||\n      this.state.status() === CommentStatus.UPDATE\n    ) {\n      this.cancel.emit();\n    }\n  }\n\n  contentKeyDown(event: KeyboardEvent) {\n    const isMac = isMacPlatform();\n    const ctrlOrCmd = isMac ? event.metaKey : event.ctrlKey;\n\n    if (ctrlOrCmd && event.key === 'Enter') {\n      event.preventDefault();\n\n      if (this.form.valid) {\n        this.update();\n      }\n    }\n\n    if (event.key === 'Escape') {\n      this.cancelEdit();\n    }\n  }\n}\n\n    \n\n    \n        @let comment = state.comment();\n@let status = state.status();\n\n@let showContent = status === CommentStatus.INITIAL || status === CommentStatus.INFORMATION;\n\n@let ariaLabelContent =\n  status === CommentStatus.UPDATE\n    ? 'Update comment'\n    : status === CommentStatus.REPLY\n      ? 'Reply a comment'\n      : status === CommentStatus.SEND\n        ? 'Add a comment'\n        : '';\n\n@let editContent =\n  status === CommentStatus.UPDATE ||\n  status === CommentStatus.REPLY ||\n  status === CommentStatus.SEND;\n\n@let isUpdate = status === CommentStatus.UPDATE;\n\n@if (showContent) {\n  \n    @if (comment) {\n      {{ comment.content }}\n    }\n  \n}\n\n@if (editContent) {\n  \n    \n      \n    \n\n    @if (!isUpdate) {\n      \n        @if (state.currentUser()) {\n          @let user = state.currentUser();\n\n          \n        }\n      \n    }\n\n    \n      \n        @if (status === CommentStatus.SEND) {\n          Send\n        }\n\n        @if (status === CommentStatus.REPLY) {\n          Reply\n        }\n\n        @if (status === CommentStatus.UPDATE) {\n          Update\n        }\n      \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let comment = state.comment();@let status = state.status();@let showContent = status === CommentStatus.INITIAL || status === CommentStatus.INFORMATION;@let ariaLabelContent =  status === CommentStatus.UPDATE    ? \\'Update comment\\'    : status === CommentStatus.REPLY      ? \\'Reply a comment\\'      : status === CommentStatus.SEND        ? \\'Add a comment\\'        : \\'\\';@let editContent =  status === CommentStatus.UPDATE ||  status === CommentStatus.REPLY ||  status === CommentStatus.SEND;@let isUpdate = status === CommentStatus.UPDATE;@if (showContent) {      @if (comment) {      {{ comment.content }}    }  }@if (editContent) {                    @if (!isUpdate) {              @if (state.currentUser()) {          @let user = state.currentUser();                  }          }                  @if (status === CommentStatus.SEND) {          Send        }        @if (status === CommentStatus.REPLY) {          Reply        }        @if (status === CommentStatus.UPDATE) {          Update        }            }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentContent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentHeader.html":{"url":"components/CommentHeader.html","title":"component - CommentHeader","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/comments/components/comment-card/components/comment-header/comment-header.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment-header\n            \n\n\n            \n                imports\n                \n                            TimeAgoPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./comment-header.html\n            \n\n\n\n            \n                styleUrl\n                ./comment-header.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: CommentCardState)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/comments/components/comment-card/components/comment-header/comment-header.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        CommentCardState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommentCardState\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-header/comment-header.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CommentCardState } from '../../services/comment-card-state';\nimport { TimeAgoPipe } from '@app/shared/pipes/time-ago-pipe';\n\n@Component({\n  selector: 'app-comment-header',\n  imports: [TimeAgoPipe],\n  templateUrl: './comment-header.html',\n  styleUrl: './comment-header.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CommentHeader {\n  constructor(public state: CommentCardState) {}\n}\n\n    \n\n    \n        @let comment = state.comment();\n\n@let userComment = comment?.user?.username;\n@let currentUser = state.currentUser()?.username;\n\n@let isYourOwnComment = userComment === currentUser;\n\n@if (comment) {\n  \n    \n      Comment by {{ comment.user.username }}\n    \n    \n    {{ userComment }}\n      @if (isYourOwnComment) {\n        You\n      }\n    \n\n    @if (comment.createdAt) {\n      {{\n        comment.createdAt | timeAgo\n      }}\n    }\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let comment = state.comment();@let userComment = comment?.user?.username;@let currentUser = state.currentUser()?.username;@let isYourOwnComment = userComment === currentUser;@if (comment) {            Comment by {{ comment.user.username }}            {{ userComment }}      @if (isYourOwnComment) {        You      }        @if (comment.createdAt) {      {{        comment.createdAt | timeAgo      }}    }  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentHeader'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentShortcut.html":{"url":"components/CommentShortcut.html","title":"component - CommentShortcut","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentShortcut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment-shortcut\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./comment-shortcut.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CommentStatus\n                            \n                            \n                                modalDelete\n                            \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteAction\n                            \n                            \n                                editAction\n                            \n                            \n                                replyAction\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                reply\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: CommentCardState)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        CommentCardState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reply\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editAction\n                        \n                    \n                \n            \n            \n                \neditAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replyAction\n                        \n                    \n                \n            \n            \n                \nreplyAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CommentStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CommentStatus\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalDelete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ModalDeleteCommentService)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommentCardState\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  inject,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport { CommentCardState } from '../../services/comment-card-state';\n\nimport { CommentStatus } from '@features/comments/components/comment-card/services/comment-card-models';\nimport { ModalDeleteCommentService } from '@modals/delete-comment/delete-comment-service';\n\n@Component({\n  selector: 'app-comment-shortcut',\n  imports: [],\n  templateUrl: './comment-shortcut.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CommentShortcut {\n  @Output() delete = new EventEmitter();\n  @Output() reply = new EventEmitter();\n  @Output() edit = new EventEmitter();\n\n  modalDelete = inject(ModalDeleteCommentService);\n\n  CommentStatus = CommentStatus;\n\n  constructor(public state: CommentCardState) {}\n\n  async deleteAction() {\n    const action = await this.modalDelete.open();\n\n    if (action === 'yes') {\n      this.delete.emit();\n    }\n  }\n\n  replyAction() {\n    this.reply.emit();\n  }\n\n  editAction() {\n    this.edit.emit();\n  }\n}\n\n    \n\n    \n        @let id = state.comment()?.id;\n@let status = state.status();\n@let isYourOwnComment = state.isYourOwnComment();\n\n\n  @if (status !== CommentStatus.SEND) {\n    @if (isYourOwnComment) {\n      \n        \n          \n        \n\n        Delete\n      \n    }\n    @if (!isYourOwnComment) {\n      \n        \n          \n        \n        Reply\n      \n    }\n    @if (isYourOwnComment) {\n      \n        \n          \n        \n\n        Edit\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let id = state.comment()?.id;@let status = state.status();@let isYourOwnComment = state.isYourOwnComment();  @if (status !== CommentStatus.SEND) {    @if (isYourOwnComment) {                                        Delete          }    @if (!isYourOwnComment) {                                        Reply          }    @if (isYourOwnComment) {                                        Edit          }  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentShortcut'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentUpvote.html":{"url":"components/CommentUpvote.html","title":"component - CommentUpvote","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentUpvote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment-upvote\n            \n\n\n            \n                imports\n                \n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./comment-upvote.html\n            \n\n\n\n            \n                styleUrl\n                ./comment-upvote.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hostClasses\n                            \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                upvote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                classes\n                            \n                            \n                                wasUpvoted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateVote\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classes\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: CommentCardState)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        CommentCardState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        classes\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        wasUpvoted\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateVote\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        upvote\n                        \n                    \n                \n            \n            \n                \nupvote(vote: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vote\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hostClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'comment-upvote rounded-[10px] p-[8px] bg-grey-50'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CommentCardState\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classes\n                    \n                \n\n\n                \n                    \n                        setclasses(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NgClass } from '@angular/common';\n\nimport { CommentCardState } from '../../services/comment-card-state';\n\n@Component({\n  selector: 'app-comment-upvote',\n  imports: [NgClass],\n  templateUrl: './comment-upvote.html',\n  styleUrl: './comment-upvote.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CommentUpvote {\n  @Input() wasUpvoted?: number;\n  @Output() updateVote = new EventEmitter();\n\n  hostClasses = 'comment-upvote rounded-[10px] p-[8px] bg-grey-50';\n\n  @Input()\n  set classes(value: string) {\n    this.hostClasses = this.hostClasses + (value ? ` ${value}` : '');\n  }\n\n  constructor(public state: CommentCardState) {}\n\n  upvote(vote: number) {\n    if (this.wasUpvoted === vote) this.updateVote.emit(0);\n    else this.updateVote.emit(vote);\n  }\n}\n\n    \n\n    \n        @let id = state.comment()?.id;\n@let userComment = state.comment()?.user?.username;\n@let currentUser = state.currentUser()?.username;\n\n@let isYourOwnComment = userComment === currentUser;\n\n\n  \n    \n      \n    \n  \n  {{ state.comment()?.score ?? 0 }}\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let id = state.comment()?.id;@let userComment = state.comment()?.user?.username;@let currentUser = state.currentUser()?.username;@let isYourOwnComment = userComment === currentUser;                    {{ state.comment()?.score ?? 0 }}                  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentUpvote'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Comments.html":{"url":"components/Comments.html","title":"component - Comments","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/comments/comments.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comments\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CommentCard\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./comments.html\n            \n\n\n\n            \n                styleUrl\n                ./comments.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CommentStatus\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CommentStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CommentStatus\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/comments.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(GlobalStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/comments/comments.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\n\nimport { CommentCard } from './components/comment-card/comment-card';\n\nimport { CommentStatus } from '@features/comments/components/comment-card/services/comment-card-models';\n\nimport { GlobalStore } from '@app/state';\n\n@Component({\n  standalone: true,\n  selector: 'app-comments',\n  imports: [CommentCard],\n  templateUrl: './comments.html',\n  styleUrl: './comments.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Comments {\n  CommentStatus = CommentStatus;\n\n  store = inject(GlobalStore);\n}\n\n    \n\n    \n        \n  @for (\n    comment of store.comments();\n    track `${comment.id}-${comment.status ?? ''}-${comment.score}`;\n    let idx1 = $index\n  ) {\n    \n\n    @if (comment.replies && comment.replies!.length > 0) {\n      \n        \n          @for (\n            reply of comment.replies;\n            track `${reply.id}-${reply.status ?? ''}-${reply.score}`;\n            let idx2 = $index\n          ) {\n            \n          }\n        \n      \n    }\n  }\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @for (    comment of store.comments();    track `${comment.id}-${comment.status ?? \\'\\'}-${comment.score}`;    let idx1 = $index  ) {        @if (comment.replies && comment.replies!.length > 0) {                        @for (            reply of comment.replies;            track `${reply.id}-${reply.status ?? \\'\\'}-${reply.score}`;            let idx2 = $index          ) {                      }                  }  }  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'Comments'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteComment.html":{"url":"interfaces/DeleteComment.html","title":"interface - DeleteComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeleteComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idx1\n                                        \n                                \n                                \n                                        \n                                            idx2\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx1:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx2:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Footer.html":{"url":"components/Footer.html","title":"component - Footer","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Footer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/main-layout/components/footer/footer.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n            \n                template\n                \n  Challenge by\n  \n    Frontend Mentor\n  \n  . Coded by\n  \n    Barrie Freyre\n  \n  .\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  template: `\n    \n      Challenge by\n      \n        Frontend Mentor\n      \n      . Coded by\n      \n        Barrie Freyre\n      \n      .\n    \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Footer {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Challenge by      Frontend Mentor    . Coded by      Barrie Freyre    .'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'Footer'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            png\n                                        \n                                \n                                \n                                        \n                                            webp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        png\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        png:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayout.html":{"url":"components/MainLayout.html","title":"component - MainLayout","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/main-layout/main-layout.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n\n            \n                imports\n                \n                            RouterModule\n                                Footer\n                \n            \n\n\n\n            \n                template\n                \n  \n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { Footer } from './components/footer/footer';\n\n@Component({\n  selector: 'app-main-layout',\n  imports: [RouterModule, Footer],\n  template: `\n    \n      \n        \n      \n      \n    \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MainLayout {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainLayout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalDeleteComment.html":{"url":"components/ModalDeleteComment.html","title":"component - ModalDeleteComment","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalDeleteComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/modals/delete-comment/modal-delete-comment.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-delete-comment\n            \n\n\n            \n                imports\n                \n                                AutoFocus\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal-delete-comment.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/modals/delete-comment/modal-delete-comment.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/modals/delete-comment/modal-delete-comment.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\nimport { AutoFocus } from '@app/shared/directives/auto-focus';\n\n@Component({\n  selector: 'app-modal-delete-comment',\n  imports: [AutoFocus],\n  templateUrl: './modal-delete-comment.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModalDeleteComment {\n  @Output() close = new EventEmitter();\n\n  onClose(action: string) {\n    this.close.emit(action);\n  }\n}\n\n    \n\n    \n        \n\n  Delete comment\n  \n    Are you sure you want to delete this comment? This will remove the comment and can’t be undone.\n  \n  \n    \n      No, cancel\n    \n    \n      Yes, delete\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Delete comment      Are you sure you want to delete this comment? This will remove the comment and can’t be undone.              No, cancel              Yes, delete      '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalDeleteComment'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalDeleteCommentService.html":{"url":"injectables/ModalDeleteCommentService.html","title":"injectable - ModalDeleteCommentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModalDeleteCommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/modals/delete-comment/delete-comment-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appRef\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/modals/delete-comment/delete-comment-service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/modals/delete-comment/delete-comment-service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        appRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ApplicationRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/modals/delete-comment/delete-comment-service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/modals/delete-comment/delete-comment-service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/modals/delete-comment/delete-comment-service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  inject,\n  ApplicationRef,\n  ComponentRef,\n  createComponent,\n  EnvironmentInjector,\n} from '@angular/core';\n\nimport { ModalDeleteComment } from './modal-delete-comment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalDeleteCommentService {\n  private appRef = inject(ApplicationRef);\n  private injector = inject(EnvironmentInjector);\n  private modalRef: ComponentRef | null = null;\n\n  open(): Promise {\n    if (this.modalRef) return Promise.reject('Modal already open');\n\n    this.modalRef = createComponent(ModalDeleteComment, { environmentInjector: this.injector });\n\n    const result = new Promise((resolve) => {\n      this.modalRef!.instance.close.subscribe((action) => {\n        resolve(action);\n\n        this.close();\n      });\n    });\n\n    this.appRef.attachView(this.modalRef.hostView);\n    document.body.appendChild(this.modalRef.location.nativeElement);\n\n    return result;\n  }\n\n  close() {\n    if (this.modalRef) {\n      this.appRef.detachView(this.modalRef.hostView);\n      this.modalRef.destroy();\n      this.modalRef = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFound.html":{"url":"components/NotFound.html","title":"component - NotFound","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFound\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/not-found/not-found.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n            \n                template\n                \n  404\n  Page not found\n  Go Home\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  imports: [RouterLink],\n  template: `\n    \n      404\n      Page not found\n      Go Home\n    \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotFound {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Page not found  Go Home'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'CommentCard', 'selector': 'app-comment-card'},{'name': 'CommentContent', 'selector': 'app-comment-content'},{'name': 'CommentHeader', 'selector': 'app-comment-header'},{'name': 'Comments', 'selector': 'app-comments'},{'name': 'CommentShortcut', 'selector': 'app-comment-shortcut'},{'name': 'CommentUpvote', 'selector': 'app-comment-upvote'},{'name': 'Footer', 'selector': 'app-footer'},{'name': 'MainLayout', 'selector': 'app-main-layout'},{'name': 'ModalDeleteComment', 'selector': 'app-modal-delete-comment'},{'name': 'NotFound', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [{'name': 'AutoFocus', 'selector': '[appAutoFocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFound'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reply.html":{"url":"interfaces/Reply.html","title":"interface - Reply","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reply\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            replyingTo\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyingTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyingTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReplyComment.html":{"url":"interfaces/ReplyComment.html","title":"interface - ReplyComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReplyComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idx1\n                                        \n                                \n                                \n                                        \n                                            idx2\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx1:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx2:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/time-ago-pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/time-ago-pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatDistanceToNow, parseISO, isValid } from 'date-fns';\n\n@Pipe({\n  name: 'timeAgo',\n  standalone: true,\n})\nexport class TimeAgoPipe implements PipeTransform {\n  transform(value: string | Date): string {\n    if (!value) return '';\n\n    const date = typeof value === 'string' ? parseISO(value) : value;\n\n    if (!isValid(date)) return '';\n\n    return formatDistanceToNow(date, { addSuffix: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateComment.html":{"url":"interfaces/UpdateComment.html","title":"interface - UpdateComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idx1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            idx2\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx1:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx2:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateStatus.html":{"url":"interfaces/UpdateStatus.html","title":"interface - UpdateStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idx1\n                                        \n                                \n                                \n                                        \n                                            idx2\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx1:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx2:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpvoteComment.html":{"url":"interfaces/UpvoteComment.html","title":"interface - UpvoteComment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpvoteComment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            formerVote\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idx1\n                                        \n                                \n                                \n                                        \n                                            idx2\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            vote\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formerVote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formerVote:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx1:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idx2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idx2:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vote:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         Image\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Image\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/comment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comments\n                                        \n                                \n                                \n                                        \n                                            currentUser\n                                        \n                                \n                                \n                                        \n                                            lastId\n                                        \n                                \n                                \n                                        \n                                            upvote\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comments:         Comment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Comment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentUser:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upvote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upvote:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserData {\n  upvote: { [key: string]: number };\n  lastId: number;\n  currentUser: User;\n  comments: Comment[];\n}\n\nexport interface User {\n  username: string;\n  image: Image;\n}\n\nexport type CurrentUser = User;\n\nexport interface Image {\n  png: string;\n  webp: string;\n}\n\nexport interface Comment {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replies?: Comment[];\n  replyingTo?: string;\n  user: User;\n  status?: CommentStatusType;\n}\n\nexport interface Reply {\n  id: number;\n  content: string;\n  createdAt: string;\n  score: number;\n  replyingTo: string;\n  user: User;\n}\n\nexport const CommentStatus = {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n};\n\nexport type CommentStatusType = (typeof CommentStatus)[keyof typeof CommentStatus];\n\nexport interface UpdateStatus {\n  status: string;\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface UpdateComment {\n  status: string;\n  idx1?: number;\n  idx2?: number;\n  id?: number;\n  content: string;\n  user?: User;\n}\n\nexport interface DeleteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n}\n\nexport interface ReplyComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  user?: User;\n}\n\nexport interface UpvoteComment {\n  idx1: number;\n  idx2: number;\n  id: number;\n  score: number;\n  formerVote: number;\n  vote: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/comments/comments.ts\n            \n            component\n            Comments\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/comments/components/comment-card/comment-card.ts\n            \n            component\n            CommentCard\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/features/comments/components/comment-card/components/comment-content/comment-content.ts\n            \n            component\n            CommentContent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/features/comments/components/comment-card/components/comment-header/comment-header.ts\n            \n            component\n            CommentHeader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/comments/components/comment-card/components/comment-shortcut/comment-shortcut.ts\n            \n            component\n            CommentShortcut\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/comments/components/comment-card/components/comment-upvote/comment-upvote.ts\n            \n            component\n            CommentUpvote\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/features/comments/components/comment-card/services/comment-card-models.ts\n            \n            variable\n            CommentStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/features/comments/components/comment-card/services/comment-card-models.ts\n            \n            type alias\n            CommentStatusType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/comments/components/comment-card/services/comment-card-state.ts\n            \n            injectable\n            CommentCardState\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/features/not-found/not-found.ts\n            \n            component\n            NotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/main-layout/components/footer/footer.ts\n            \n            component\n            Footer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/main-layout/main-layout.ts\n            \n            component\n            MainLayout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/directives/auto-focus.ts\n            \n            directive\n            AutoFocus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/modals/delete-comment/delete-comment-service.ts\n            \n            injectable\n            ModalDeleteCommentService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/modals/delete-comment/modal-delete-comment.ts\n            \n            component\n            ModalDeleteComment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            Comment\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            DeleteComment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            Image\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            Reply\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            ReplyComment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            UpdateComment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            UpdateStatus\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            UpvoteComment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/comment.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/shared/models/comment.ts\n            \n            variable\n            CommentStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/models/comment.ts\n            \n            type alias\n            CommentStatusType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/models/comment.ts\n            \n            type alias\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/time-ago-pipe.ts\n            \n            pipe\n            TimeAgoPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/shared/utils/helper.ts\n            \n            function\n            isMacPlatform\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/state/comments-state.ts\n            \n            variable\n            emptyComments\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/state/comments-state.ts\n            \n            variable\n            emptyCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/state/comments-state.ts\n            \n            variable\n            updateStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/state/comments-state.ts\n            \n            variable\n            USER_DATA_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/state/index.ts\n            \n            variable\n            GlobalStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/state/initial-data.ts\n            \n            variable\n            initialData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.secret.ts\n            \n            variable\n            secret\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : 20.0.0\n        \n            @angular/compiler : 20.0.0\n        \n            @angular/core : 20.0.0\n        \n            @angular/forms : 20.0.0\n        \n            @angular/platform-browser : 20.0.0\n        \n            @angular/router : 20.0.0\n        \n            @ngrx/signals : 20.0.1\n        \n            @tailwindcss/postcss : 4.1.12\n        \n            date-fns : 4.1.0\n        \n            postcss : 8.5.6\n        \n            rxjs : 7.8.0\n        \n            tailwindcss : 4.1.12\n        \n            tslib : 2.3.0\n        \n            uuid : 11.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isMacPlatform   (src/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/utils/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMacPlatform\n                        \n                    \n                \n            \n            \n                \nisMacPlatform()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProject\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CommentStatusType   (src/.../comment.ts)\n                        \n                        \n                            CommentStatusType   (src/.../comment-card-models.ts)\n                        \n                        \n                            CurrentUser   (src/.../comment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/comment.ts\n    \n    \n        \n            \n                \n                    \n                    CommentStatusType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CurrentUser\n                \n            \n            \n                \n                            User\n\n                \n            \n        \n    \n    src/app/features/comments/components/comment-card/services/comment-card-models.ts\n    \n    \n        \n            \n                \n                    \n                    CommentStatusType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            CommentStatus   (src/.../comment.ts)\n                        \n                        \n                            CommentStatus   (src/.../comment-card-models.ts)\n                        \n                        \n                            emptyComments   (src/.../comments-state.ts)\n                        \n                        \n                            emptyCurrentUser   (src/.../comments-state.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            GlobalStore   (src/.../index.ts)\n                        \n                        \n                            initialData   (src/.../initial-data.ts)\n                        \n                        \n                            secret   (src/.../environment.secret.ts)\n                        \n                        \n                            updateStorage   (src/.../comments-state.ts)\n                        \n                        \n                            USER_DATA_STATE   (src/.../comments-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZonelessChangeDetection(),\n    provideRouter(routes, withHashLocation()),\n    provideHttpClient(withFetch()),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/models/comment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommentStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/features/comments/components/comment-card/services/comment-card-models.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommentStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  INITIAL: 'INITIAL',\n  INFORMATION: 'INFORMATION',\n  UPDATE: 'UPDATE',\n  REPLY: 'REPLY',\n  DELETE: 'DELETE',\n  SEND: 'SEND',\n  UPVOTE: 'UPVOTE',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/state/comments-state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyComments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Comment[] => []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): CurrentUser => ({\n  username: '',\n  image: {\n    png: '',\n    webp: '',\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  data: CurrentUser | Comment[] | number | { [key: string]: number },\n  key: 'comments' | 'currentUser' | 'lastId' | 'upvote'\n) => {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_DATA_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UserData', {\n  factory: () => {\n    const upvoteRaw = localStorage.getItem('upvote');\n    const lastIdRaw = localStorage.getItem('lastId');\n    const commentsRaw = localStorage.getItem('comments');\n    const currentUserRaw = localStorage.getItem('currentUser');\n\n    let comments: Comment[] = emptyComments();\n    let currentUser: CurrentUser = emptyCurrentUser();\n    let lastId: number = 100;\n    let upvote: { [key: string]: number } = {};\n\n    if (!upvoteRaw) {\n      updateStorage({}, 'upvote');\n    } else {\n      upvote = JSON.parse(upvoteRaw);\n    }\n\n    if (!lastIdRaw) {\n      updateStorage(100, 'lastId');\n\n      lastId = 100;\n    } else {\n      lastId = parseInt(lastIdRaw!, 10);\n    }\n\n    if (!commentsRaw) {\n      updateStorage(initialData['comments'], 'comments');\n\n      comments = initialData['comments'];\n    } else {\n      comments = JSON.parse(commentsRaw);\n    }\n\n    if (!currentUserRaw) {\n      updateStorage(initialData['currentUser'], 'currentUser');\n\n      currentUser = initialData['currentUser'];\n    } else {\n      currentUser = JSON.parse(currentUserRaw);\n    }\n\n    return {\n      upvote,\n      lastId,\n      comments,\n      currentUser,\n    };\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  ...secret,\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  ...secret,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/state/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GlobalStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(() => inject(USER_DATA_STATE)),\n  withMethods((store) => ({\n    clearCurrentUser() {\n      const currentUser: CurrentUser = emptyCurrentUser();\n\n      updateStorage(currentUser, 'currentUser');\n      patchState(store, { currentUser });\n    },\n    clearComments() {\n      let comments: Comment[] = emptyComments();\n\n      updateStorage(comments, 'comments');\n      patchState(store, { comments });\n    },\n    getUpvote: (id: string | number): number | undefined => {\n      return store.upvote()[id] ?? undefined;\n    },\n    setUpvote({ idx1, idx2, id, score, formerVote, vote }: UpvoteComment) {\n      const upvote = structuredClone(store.upvote());\n      const comments = structuredClone(store.comments());\n\n      score += vote - formerVote;\n\n      if (comments[idx1!]) {\n        if (idx2 === -1 && comments[idx1!].id === id) {\n          comments[idx1!].score = score;\n        } else if (comments[idx1!].replies?.[idx2!]?.id === id) {\n          comments[idx1!].replies![idx2!].score = score;\n        }\n      }\n\n      upvote[id] = vote;\n\n      updateStorage(comments, 'comments');\n      updateStorage(upvote, 'upvote');\n      patchState(store, { upvote, comments });\n    },\n    loggedInUser: computed(() => store.currentUser()),\n    postComments: computed(() => store.comments()),\n    deleteComment({ idx1, idx2, id }: DeleteComment) {\n      const comments = structuredClone(store.comments());\n\n      if (comments[idx1]) {\n        if (idx2 === -1 && comments[idx1].id === id) {\n          comments.splice(idx1, 1);\n        } else if (comments[idx1].replies?.[idx2]?.id === id) {\n          comments[idx1].replies.splice(idx2, 1);\n        }\n      }\n\n      updateStorage(comments, 'comments');\n      patchState(store, { comments });\n    },\n    updateStatus({ status, idx1, idx2, id }: UpdateStatus) {\n      const comments = structuredClone(store.comments());\n\n      if (comments[idx1!]) {\n        if (idx2 === -1 && comments[idx1!].id === id) {\n          comments[idx1!].status = status;\n        } else if (comments[idx1!].replies?.[idx2!]?.id === id) {\n          comments[idx1!].replies![idx2!].status = status;\n        }\n      }\n\n      updateStorage(comments, 'comments');\n      patchState(store, { comments });\n    },\n    updateComment({ status, idx1, idx2, id, content, user }: UpdateComment) {\n      const comments = structuredClone(store.comments());\n      let lastId = store.lastId();\n      let comment: Comment;\n\n      if (status === CommentStatus.SEND) {\n        lastId++;\n\n        comment = {\n          id: lastId,\n          content,\n          createdAt: formatISO(new Date()),\n          score: 0,\n          replies: [],\n          replyingTo: '',\n          user: user!,\n          status: CommentStatus.INFORMATION,\n        };\n\n        comments.push(comment);\n      }\n\n      if (comments[idx1!] && (status === CommentStatus.REPLY || status === CommentStatus.UPDATE)) {\n        if (idx2 === -1 && comments[idx1!].id === id) {\n          comments[idx1!].content = content!;\n          comments[idx1!].status = CommentStatus.INFORMATION;\n        } else if (comments[idx1!].replies?.[idx2!]?.id === id) {\n          comments[idx1!].replies![idx2!].content = content;\n          comments[idx1!].replies![idx2!].status = CommentStatus.INFORMATION;\n        }\n      }\n\n      updateStorage(comments, 'comments');\n      patchState(store, { lastId, comments });\n    },\n    replyComment({ idx1, idx2, id, user }: ReplyComment) {\n      const comments = structuredClone(store.comments());\n      let lastId = store.lastId();\n      let comment: Comment;\n\n      // remove any previous reply\n      for (let i = comments.length - 1; i >= 0; i--) {\n        if (comments[i].status === CommentStatus.REPLY) {\n          comments.splice(i, 1);\n        } else if (comments[i].replies?.length) {\n          for (let j = comments[i].replies!.length - 1; j >= 0; j--) {\n            if (comments[i].replies![j].status === CommentStatus.REPLY) {\n              comments[i].replies!.splice(j, 1);\n            }\n          }\n        }\n      }\n\n      comment = {\n        id: ++lastId,\n        content: '',\n        createdAt: formatISO(new Date()),\n        score: 0,\n        replies: [],\n        replyingTo: '',\n        user: user!,\n      };\n\n      if (comments[idx1]) {\n        if (idx2 === -1 && comments[idx1].id === id) {\n          const replies = comments[idx1].replies ?? [];\n          const replyingTo = comments[idx1].user.username;\n\n          comment.replyingTo = replyingTo;\n          comment.content = `@${replyingTo} `;\n          comment.content = `@${replyingTo} `;\n          comment.status = CommentStatus.REPLY;\n\n          replies.push(comment);\n\n          comments[idx1].replies = replies;\n        } else if (comments[idx1].replies?.[idx2]?.id === id) {\n          const replies = comments[idx1].replies;\n          const replyingTo = comments[idx1].replies[idx2].user.username;\n\n          comment.replyingTo = replyingTo;\n          comment.content = `@${replyingTo} `;\n          comment.status = CommentStatus.REPLY;\n\n          replies.splice(idx2 + 1, 0, comment);\n          comments[idx1].replies = replies;\n        }\n      }\n\n      updateStorage(comments, 'comments');\n      patchState(store, { lastId, comments });\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n\n    src/app/state/initial-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserData\n\n                    \n                \n                \n                    \n                        Default value : {\n  upvote: {},\n  lastId: 100,\n  currentUser: {\n    image: {\n      png: '/assets/images/avatars/image-juliusomo.png',\n      webp: '/assets/images/avatars/image-juliusomo.webp',\n    },\n    username: 'juliusomo',\n  },\n  comments: [\n    {\n      id: 1,\n      content:\n        \"Impressive! Though it seems the drag feature could be improved. But overall it looks incredible. You've nailed the design and the responsiveness at various breakpoints works really well.\",\n      createdAt: '2025-08-06T00:00:00.000Z', // 30 days ago\n      score: 12,\n      user: {\n        image: {\n          png: '/assets/images/avatars/image-amyrobson.png',\n          webp: '/assets/images/avatars/image-amyrobson.webp',\n        },\n        username: 'amyrobson',\n      },\n      replies: [],\n    },\n    {\n      id: 2,\n      content:\n        \"Woah, your project looks awesome! How long have you been coding for? I'm still new, but think I want to dive into React as well soon. Perhaps you can give me an insight on where I can learn React? Thanks!\",\n      createdAt: '2025-08-22T00:00:00.000Z', // 14 days ago\n      score: 5,\n      user: {\n        image: {\n          png: '/assets/images/avatars/image-maxblagun.png',\n          webp: '/assets/images/avatars/image-maxblagun.webp',\n        },\n        username: 'maxblagun',\n      },\n      replies: [\n        {\n          id: 3,\n          content:\n            \"If you're still new, I'd recommend focusing on the fundamentals of HTML, CSS, and JS before considering React. It's very tempting to jump ahead but lay a solid foundation first.\",\n          createdAt: '2025-08-29T00:00:00.000Z', // 7 days ago\n          score: 4,\n          replyingTo: 'maxblagun',\n          user: {\n            image: {\n              png: '/assets/images/avatars/image-ramsesmiron.png',\n              webp: '/assets/images/avatars/image-ramsesmiron.webp',\n            },\n            username: 'ramsesmiron',\n          },\n        },\n        {\n          id: 4,\n          content:\n            \"I couldn't agree more with this. Everything moves so fast and it always seems like everyone knows the newest library/framework. But the fundamentals are what stay constant.\",\n          createdAt: '2025-09-03T00:00:00.000Z', // 2 days ago\n          score: 2,\n          replyingTo: 'ramsesmiron',\n          user: {\n            image: {\n              png: '/assets/images/avatars/image-juliusomo.png',\n              webp: '/assets/images/avatars/image-juliusomo.webp',\n            },\n            username: 'juliusomo',\n          },\n        },\n      ],\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.secret.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        secret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  supabaseUrl: 'https://your-project-id.supabase.co',\n  supabaseAnonKey: 'your-anon-public-key',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
